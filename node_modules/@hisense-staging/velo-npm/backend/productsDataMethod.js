const { items: wixData } = require('@wix/data');
const { COLLECTIONS } = require('../public/consts');
const { getDataBySlug } = require('../public/product/data');
const { TASKS } = require('./productTasks/consts');
const { TASK_TYPE } = require('./tasks/consts');
const { taskManager } = require('./tasks/taskManager');

async function updateSkuField(data) {
    const {slug, productId} = data;

    let productInCMS;
    let newSku;
    if (slug) {
        const {product, productInCMS: cmsProduct} = await getDataBySlug(slug); 
        productInCMS = cmsProduct;
        newSku = product.sku;
    }else{
         productInCMS = await wixData.get(COLLECTIONS.CMS_PRODUCTS, productId);
         newSku = "";
    }

    if (!productInCMS || newSku === productInCMS.sku) {
        console.log('[updateSkuField] productInCMS not found or sku is the same, skipping');
        return;
    }

    const newDataToUpdate = {
            ...productInCMS,
            sku: newSku
    }
    await wixData.save(COLLECTIONS.CMS_PRODUCTS, newDataToUpdate);
    console.log('[updateSkuField] SKU updated successfully');
}

async function updateMissingSkusForExistingProducts() {
    const baseQuery = wixData.query(COLLECTIONS.CMS_PRODUCTS);
    const products = await baseQuery.isEmpty('sku').or(baseQuery.eq('sku', '')).find();
    if (products.items.length > 0) {
        for (const product of products.items) {
            taskManager().schedule({
                name: TASKS.CMS_PRODUCT_UPDATE_SKU.name,
                data: { storeProductId: product.storeProduct, productId: product._id},
                type: TASK_TYPE.SCHEDULED,
                parentTaskId: undefined,
            });
        }
    }
}

module.exports = { updateSkuField, updateMissingSkusForExistingProducts };