const { TASK_TYPE, TASK_STATUS, TASK_MAX_TRIES } = require('../consts');

const isCompletedSuccessfully = task =>
  [TASK_STATUS.SUCCESS, TASK_STATUS.SKIPPED].includes(task.status);

const isPermanentlyFailed = task =>
  task.status === TASK_STATUS.FAILED && task.amountOfRetries === TASK_MAX_TRIES;
const isFinishedTask = task => isCompletedSuccessfully(task) || isPermanentlyFailed(task);

const isUnfinishedTask = task => !isCompletedSuccessfully(task) && !isPermanentlyFailed(task);
const createChildTaskPayload = ({ taskName, taskData, parentTaskId }) => ({
  name: taskName,
  data: taskData,
  type: TASK_TYPE.SCHEDULED,
  parentTaskId,
});
const shouldScheduleNextChild = ({ parentTaskConfig, scheduledChildren, expectedChildTasks }) =>
  parentTaskConfig.scheduleChildrenSequentially &&
  scheduledChildren.length < expectedChildTasks.length;

module.exports = {
  createChildTaskPayload,
  isPermanentlyFailed,
  isCompletedSuccessfully,
  isFinishedTask,
  isUnfinishedTask,
  shouldScheduleNextChild,
};
