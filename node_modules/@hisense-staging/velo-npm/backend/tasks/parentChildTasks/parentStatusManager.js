const { TASK_STATUS } = require('../consts');
const { markTask } = require('../utils');

const { isPermanentlyFailed, isCompletedSuccessfully, isUnfinishedTask } = require('./utils');

const hasFailedChildAndMarkedParent = async (parent, children) => {
  const failedChild = children.find(child => isPermanentlyFailed(child));
  if (failedChild) {
    console.log('Child task failed, so marking parent as failed!!');
    await markTask({
      task: parent,
      status: TASK_STATUS.FAILED,
      error: failedChild.error,
    });
    return true;
  }
  return false;
};

const hasUnfinishedChild = children => children.some(child => isUnfinishedTask(child));

const areChildrenSucceededAndMarkedParent = async ({
  parent,
  scheduledChildren,
  expectedChildrenCount,
}) => {
  const allChildrenSucceeded =
    scheduledChildren.length === expectedChildrenCount &&
    scheduledChildren.every(isCompletedSuccessfully);
  if (allChildrenSucceeded) {
    await markTask({ task: parent, status: TASK_STATUS.SUCCESS });
    return true;
  }
  return false;
};

module.exports = {
  hasFailedChildAndMarkedParent,
  hasUnfinishedChild,
  areChildrenSucceededAndMarkedParent,
};
