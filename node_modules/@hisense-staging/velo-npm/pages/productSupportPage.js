const { getProductInCMSByProductInStores } = require('../public');

function productSupportPageOnReady(_$w) {
  loadProductsDocuments(_$w);
}

function loadProductsDocuments(_$w) {
  _$w('#productSupportDataset').onReady(async () => {
    try {
      const currentProduct = _$w('#productSupportDataset').getCurrentItem();
      const cmsProduct = await getProductInCMSByProductInStores(currentProduct);

      if (!cmsProduct) {
        throw new Error('No matching cmsProduct found');
      }

      if (!cmsProduct.supportDocuments || cmsProduct.supportDocuments.length === 0) {
        return;
      }

      _$w('#productDocuments').onItemReady(($item, itemData) => {
        $item('#supportDocumentBtn').link = itemData.documentLink;
        $item('#supportDocumentBtn').label = itemData.title;
      });

      _$w('#productDocuments').data = cmsProduct.supportDocuments.map((doc, index) => {
        const documentName = doc.split('/').pop();
        const _id = `resource-${index}`;
        const title = decodeURIComponent(documentName);

        return {
          _id,
          title,
          documentLink: doc,
        };
      });

      _$w('#productDocuments').expand();
    } catch (error) {
      console.error('Error loading product documents:', error);
    }
  });
}

module.exports = { productSupportPageOnReady };
