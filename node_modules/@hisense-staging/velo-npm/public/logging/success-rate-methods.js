async function withSuccessRateLogs(methodName, method) {
  successRateLogger(methodName).requestStarted();
  try {
    const result = await method();
    successRateLogger(methodName).requestFinished(true);
    return result;
  } catch (error) {
    successRateLogger(methodName).requestFinished(false, error);
    throw error;
  }
}

function successRateLogger(methodName) {
  const requestStartedTerm = 'request started';
  const requestFinishedTerm = 'request finished';
  return {
    requestStarted: () => console.log(`${methodName} ${requestStartedTerm}`),
    requestFinished: (isFinishedSuccessfully = true, error) => {
      const toLogSuccessRateMsg = `${methodName} ${requestFinishedTerm}`;
      if (isFinishedSuccessfully) {
        console.log(toLogSuccessRateMsg);
      } else {
        console.error(toLogSuccessRateMsg);
        console.error(methodName, error); //error is not included in the success rate log as we can't customize log payload, also to follow same convention of message payload for all monitored logs
      }
    },
  };
}

module.exports = {
  withSuccessRateLogs,
  successRateLogger,
};
