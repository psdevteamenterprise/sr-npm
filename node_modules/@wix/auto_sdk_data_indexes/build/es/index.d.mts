import { HttpClient, NonNullablePaths, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { Index, ListIndexesOptions, ListIndexesResponse } from './index.typings.mjs';
export { CreateIndexRequest, CreateIndexResponse, DropIndexRequest, DropIndexResponse, Environment, Failure, Field, IndexSource, ListAvailableIndexesRequest, ListAvailableIndexesResponse, ListIndexesRequest, Order, Paging, PagingMetadata, Status } from './index.typings.mjs';

type IndexNonNullablePaths = `name` | `fields` | `fields.${number}.path` | `fields.${number}.order` | `status` | `failure.code` | `failure.description` | `unique` | `caseInsensitive` | `source`;
declare function createIndex$1(httpClient: HttpClient): CreateIndexSignature;
interface CreateIndexSignature {
    /**
     * Creates an index for a data collection.
     *
     * The index can't be used immediately, as the process of generating the index takes time.
     * You can check whether an index is ready by calling List Indexes.
     *
     * Note that when an index fails to create, the failed index still occupies a slot.
     * To remove the failed index and free up the slot for a new index, call Drop Index.
     * @param - ID of the data collection for which to generate the index.
     * @param - Details of the index to be created.
     * @param - Options for creating an index.
     * @returns Details of the index being generated.
     */
    (dataCollectionId: string, index: NonNullablePaths<Index, `fields` | `fields.${number}.path` | `name`>): Promise<NonNullablePaths<Index, IndexNonNullablePaths>>;
}
declare function dropIndex$1(httpClient: HttpClient): DropIndexSignature;
interface DropIndexSignature {
    /**
     * Removes an index from a data collection.
     *
     * The process of dropping an index from a collection takes time.
     * You can check whether an index has been dropped by calling List Indexes.
     * @param - ID of the data collection for which the index to be dropped is defined.
     * @param - Name of the index to drop.
     * @param - Options for dropping an index.
     */
    (dataCollectionId: string, indexName: string): Promise<void>;
}
declare function listIndexes$1(httpClient: HttpClient): ListIndexesSignature;
interface ListIndexesSignature {
    /**
     * Lists all indexes defined for a data collection.
     *
     * When an index's status is `ACTIVE`, it is ready to use.
     * While it is still being created, its status is `BUILDING`.
     *
     * When an index's status is `DROPPED`, it has been dropped successfully.
     * While it is still in the process of being removed, its status is `DROPPING`.
     * @param - ID of the data collection for which to list indexes.
     * @param - Options for retrieving a list of indexes.
     */
    (dataCollectionId: string, options?: ListIndexesOptions): Promise<NonNullablePaths<ListIndexesResponse, {
        [P in IndexNonNullablePaths]: `indexes.${number}.${P}`;
    }[IndexNonNullablePaths]>>;
}

declare const createIndex: MaybeContext<BuildRESTFunction<typeof createIndex$1> & typeof createIndex$1>;
declare const dropIndex: MaybeContext<BuildRESTFunction<typeof dropIndex$1> & typeof dropIndex$1>;
declare const listIndexes: MaybeContext<BuildRESTFunction<typeof listIndexes$1> & typeof listIndexes$1>;

export { Index, ListIndexesOptions, ListIndexesResponse, createIndex, dropIndex, listIndexes };
