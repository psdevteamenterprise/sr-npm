{"version":3,"sources":["../../../src/data-v1-external-database-connection-external-database-connections.universal.ts","../../../src/data-v1-external-database-connection-external-database-connections.http.ts"],"sourcesContent":["import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixDataV1ExternalDatabaseConnection from './data-v1-external-database-connection-external-database-connections.http.js';\n\n/** An external database connection defines a connection between an external database and a Wix site. */\nexport interface ExternalDatabaseConnection {\n  /**\n   * Name of the external database connection.\n   *\n   * An external database connection can connect to one or more external data collections or tables. These appear as `connectionName/dataCollectionId`.\n   * @immutable\n   * @minLength 1\n   * @maxLength 255\n   */\n  name?: string;\n  /**\n   * Base URL for accessing and managing data in the external database. For example: `https://example.com/my-external-database`.\n   * @format WEB_URL\n   */\n  endpoint?: string | null;\n  /**\n   * Settings specified to the external database connection as part of each request.\n   *\n   * These settings can relate to authentication, tenancy, or provide any other information necessary for processing a request. Their content and structure depend on the specific requirements of the external database's API.\n   */\n  configuration?: Record<string, any> | null;\n  /**\n   * Status of the external database connection. Includes whether the connection was established successfully, and if not, the reason for the failure.\n   * @readonly\n   */\n  connectionStatus?: ConnectionStatus;\n  /**\n   * Public key used to validate requests to the external database.\n   * @readonly\n   * @maxLength 128\n   */\n  publicKey?: string | null;\n  /**\n   * Capabilities of the external database.\n   * @readonly\n   */\n  capabilities?: Capabilities;\n}\n\nexport enum CauseOfFailure {\n  /** No connection failure. */\n  NONE = 'NONE',\n  /** General communication failure. */\n  COMMUNICATION_FAILURE = 'COMMUNICATION_FAILURE',\n  /** External database host is unreachable. */\n  DESTINATION_HOST_UNREACHABLE = 'DESTINATION_HOST_UNREACHABLE',\n  /** Unauthorized to access the external database. */\n  UNAUTHORIZED = 'UNAUTHORIZED',\n  /** `endpoint` is not set. */\n  DESTINATION_ENDPOINT_NOT_DEFINED = 'DESTINATION_ENDPOINT_NOT_DEFINED',\n}\n\n/** @enumType */\nexport type CauseOfFailureWithLiterals =\n  | CauseOfFailure\n  | 'NONE'\n  | 'COMMUNICATION_FAILURE'\n  | 'DESTINATION_HOST_UNREACHABLE'\n  | 'UNAUTHORIZED'\n  | 'DESTINATION_ENDPOINT_NOT_DEFINED';\n\nexport enum CollectionsFound {\n  /** Attempt to connect to the external database failed, so status is unknown. */\n  UNKNOWN = 'UNKNOWN',\n  /** External database has collections. */\n  YES = 'YES',\n  /** External database does not have any collections. */\n  NO = 'NO',\n}\n\n/** @enumType */\nexport type CollectionsFoundWithLiterals =\n  | CollectionsFound\n  | 'UNKNOWN'\n  | 'YES'\n  | 'NO';\n\nexport enum FieldType {\n  UNKNOWN_FIELD_TYPE = 'UNKNOWN_FIELD_TYPE',\n  TEXT = 'TEXT',\n  NUMBER = 'NUMBER',\n  DATE = 'DATE',\n  DATETIME = 'DATETIME',\n  IMAGE = 'IMAGE',\n  BOOLEAN = 'BOOLEAN',\n  DOCUMENT = 'DOCUMENT',\n  URL = 'URL',\n  RICH_TEXT = 'RICH_TEXT',\n  VIDEO = 'VIDEO',\n  ANY = 'ANY',\n  ARRAY_STRING = 'ARRAY_STRING',\n  ARRAY_DOCUMENT = 'ARRAY_DOCUMENT',\n  AUDIO = 'AUDIO',\n  TIME = 'TIME',\n  LANGUAGE = 'LANGUAGE',\n  RICH_CONTENT = 'RICH_CONTENT',\n  MEDIA_GALLERY = 'MEDIA_GALLERY',\n  ADDRESS = 'ADDRESS',\n  PAGE_LINK = 'PAGE_LINK',\n  REFERENCE = 'REFERENCE',\n  MULTI_REFERENCE = 'MULTI_REFERENCE',\n  OBJECT = 'OBJECT',\n  ARRAY = 'ARRAY',\n  /** Deprecated - can’t be added to collections. Can only appear in older collections. */\n  LEGACY_TIME = 'LEGACY_TIME',\n  /** Deprecated - can’t be added to collections. Can only appear in older collections. */\n  LEGACY_BOOK = 'LEGACY_BOOK',\n  /** Deprecated - can’t be added to collections. Can only appear in older collections. */\n  LEGACY_EXTERNAL_URL = 'LEGACY_EXTERNAL_URL',\n  /** Deprecated - can’t be added to collections. Can only appear in older collections. */\n  LEGACY_BROKEN_REFERENCE = 'LEGACY_BROKEN_REFERENCE',\n  /** Deprecated - can’t be added to collections. Can only appear in older collections. */\n  LEGACY_IMAGE = 'LEGACY_IMAGE',\n  /** Deprecated - can’t be added to collections. Can only appear in older collections. */\n  LEGACY_COLOR = 'LEGACY_COLOR',\n  /** Deprecated - can’t be added to collections. Can only appear in older collections. */\n  LEGACY_EXTERNAL_VIDEO = 'LEGACY_EXTERNAL_VIDEO',\n}\n\n/** @enumType */\nexport type FieldTypeWithLiterals =\n  | FieldType\n  | 'UNKNOWN_FIELD_TYPE'\n  | 'TEXT'\n  | 'NUMBER'\n  | 'DATE'\n  | 'DATETIME'\n  | 'IMAGE'\n  | 'BOOLEAN'\n  | 'DOCUMENT'\n  | 'URL'\n  | 'RICH_TEXT'\n  | 'VIDEO'\n  | 'ANY'\n  | 'ARRAY_STRING'\n  | 'ARRAY_DOCUMENT'\n  | 'AUDIO'\n  | 'TIME'\n  | 'LANGUAGE'\n  | 'RICH_CONTENT'\n  | 'MEDIA_GALLERY'\n  | 'ADDRESS'\n  | 'PAGE_LINK'\n  | 'REFERENCE'\n  | 'MULTI_REFERENCE'\n  | 'OBJECT'\n  | 'ARRAY'\n  | 'LEGACY_TIME'\n  | 'LEGACY_BOOK'\n  | 'LEGACY_EXTERNAL_URL'\n  | 'LEGACY_BROKEN_REFERENCE'\n  | 'LEGACY_IMAGE'\n  | 'LEGACY_COLOR'\n  | 'LEGACY_EXTERNAL_VIDEO';\n\nexport interface ConnectionStatus {\n  /** Whether the connection was established successfully. */\n  successful?: boolean;\n  /** Whether and why the connection attempt failed. */\n  causeOfFailure?: CauseOfFailureWithLiterals;\n  /**\n   * Whether the external database has collections.\n   * @readonly\n   */\n  hasCollections?: CollectionsFoundWithLiterals;\n}\n\nexport enum ProtocolVersion {\n  UNKNOWN_PROTOCOL_VERSION = 'UNKNOWN_PROTOCOL_VERSION',\n  V1 = 'V1',\n  V2 = 'V2',\n  V3 = 'V3',\n}\n\n/** @enumType */\nexport type ProtocolVersionWithLiterals =\n  | ProtocolVersion\n  | 'UNKNOWN_PROTOCOL_VERSION'\n  | 'V1'\n  | 'V2'\n  | 'V3';\n\nexport interface Capabilities {\n  /** Whether the external database supports creating new collections, updating the structure of existing collections, or deleting them. */\n  collectionModificationsSupported?: boolean;\n  /**\n   * Field types the external database supports. Applies only when `collectionModificationsSupported` is set to `true`.\n   * @maxSize 255\n   */\n  fieldTypes?: FieldTypeWithLiterals[];\n}\n\nexport interface GetExternalDatabaseConnectionRequest {\n  /**\n   * Name of the external database connection to retrieve.\n   * @maxLength 255\n   */\n  name: string;\n}\n\nexport interface GetExternalDatabaseConnectionResponse {\n  /** Details of the retrieved external database connection. */\n  externalDatabaseConnection?: ExternalDatabaseConnection;\n}\n\nexport interface ListExternalDatabaseConnectionsRequest {\n  /** Paging metadata. */\n  paging?: Paging;\n}\n\nexport interface Paging {\n  /** Number of items to load. */\n  limit?: number | null;\n  /** Number of items to skip in the current sort order. */\n  offset?: number | null;\n}\n\nexport interface ListExternalDatabaseConnectionsResponse {\n  /** List of external database connections. */\n  externalDatabaseConnections?: ExternalDatabaseConnection[];\n  /** Paging metadata. */\n  pagingMetadata?: PagingMetadata;\n}\n\nexport interface PagingMetadata {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Offset that was requested. */\n  offset?: number | null;\n  /** Total number of items that match the query. */\n  total?: number | null;\n  /** Flag that indicates the server failed to calculate the `total` field. */\n  tooManyToCount?: boolean | null;\n}\n\nexport interface CreateExternalDatabaseConnectionRequest {\n  /** External database connection details. */\n  externalDatabaseConnection: ExternalDatabaseConnection;\n  /** Connection type. The connection type specifies the type of adaptor by which the external collection is integrated with the site. */\n  connectionType: ConnectionTypeWithLiterals;\n}\n\nexport enum ConnectionType {\n  /** Unknown connection type. */\n  UNKNOWN_CONNECTION_TYPE = 'UNKNOWN_CONNECTION_TYPE',\n  /** External database connection based on the legacy [external database collection service plugin](https://dev.wix.com/docs/velo/api-reference/wix-data-v2/service-plugins-spis/external-database-collection-legacy/introduction). */\n  STANDALONE = 'STANDALONE',\n  /** External database connection based on the [external database service plugin](https://dev.wix.com/docs/rest/business-solutions/cms/service-plugins/external-database-service-plugin/introduction). */\n  WIX_SERVICE_PLUGIN = 'WIX_SERVICE_PLUGIN',\n}\n\n/** @enumType */\nexport type ConnectionTypeWithLiterals =\n  | ConnectionType\n  | 'UNKNOWN_CONNECTION_TYPE'\n  | 'STANDALONE'\n  | 'WIX_SERVICE_PLUGIN';\n\nexport interface CreateExternalDatabaseConnectionResponse {\n  /** Details of the created external database connection. */\n  externalDatabaseConnection?: ExternalDatabaseConnection;\n}\n\nexport interface UpdateExternalDatabaseConnectionRequest {\n  /** Updated external database connection. The existing connection is replaced with this version. */\n  externalDatabaseConnection: ExternalDatabaseConnection;\n}\n\nexport interface UpdateExternalDatabaseConnectionResponse {\n  /** Details of the updated external database connection. */\n  externalDatabaseConnection?: ExternalDatabaseConnection;\n}\n\nexport interface DeleteExternalDatabaseConnectionRequest {\n  /**\n   * Name of the external database connection to delete.\n   * @maxLength 255\n   */\n  name: string;\n}\n\nexport interface DeleteExternalDatabaseConnectionResponse {}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\ntype ExternalDatabaseConnectionNonNullablePaths =\n  | `name`\n  | `connectionStatus.successful`\n  | `connectionStatus.causeOfFailure`\n  | `connectionStatus.hasCollections`\n  | `capabilities.collectionModificationsSupported`\n  | `capabilities.fieldTypes`;\n\n/**\n * Retrieves the specified external database connection.\n * @param name - Name of the external database connection to retrieve.\n * @public\n * @requiredField name\n * @permissionId WIX_DATA.GET_EXTERNAL_DATABASE_CONNECTION\n * @applicableIdentity APP\n * @returns Details of the retrieved external database connection.\n * @fqn com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.GetExternalDatabaseConnection\n */\nexport async function getExternalDatabaseConnection(\n  name: string\n): Promise<\n  NonNullablePaths<\n    ExternalDatabaseConnection,\n    ExternalDatabaseConnectionNonNullablePaths\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ name: name });\n\n  const reqOpts =\n    ambassadorWixDataV1ExternalDatabaseConnection.getExternalDatabaseConnection(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)\n      ?.externalDatabaseConnection!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { name: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['name']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Lists all of the site's external database connections of all adaptor types.\n * @public\n * @permissionId WIX_DATA.LIST_EXTERNAL_DATABASE_CONNECTIONS\n * @applicableIdentity APP\n * @fqn com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.ListExternalDatabaseConnections\n */\nexport async function listExternalDatabaseConnections(\n  options?: ListExternalDatabaseConnectionsOptions\n): Promise<\n  NonNullablePaths<\n    ListExternalDatabaseConnectionsResponse,\n    {\n      [P in ExternalDatabaseConnectionNonNullablePaths]: `externalDatabaseConnections.${number}.${P}`;\n    }[ExternalDatabaseConnectionNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    paging: options?.paging,\n  });\n\n  const reqOpts =\n    ambassadorWixDataV1ExternalDatabaseConnection.listExternalDatabaseConnections(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { paging: '$[0].paging' },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface ListExternalDatabaseConnectionsOptions {\n  /** Paging metadata. */\n  paging?: Paging;\n}\n\n/**\n * Creates a new external database connection.\n *\n * Before you can establish a connection between a site and an external database, you must prepare an external database adaptor.\n * @param externalDatabaseConnection - External database connection details.\n * @param connectionType - Connection type. The connection type specifies the type of adaptor by which the external collection is integrated with the site.\n * @public\n * @requiredField connectionType\n * @requiredField externalDatabaseConnection\n * @requiredField externalDatabaseConnection.name\n * @param options - Options for creating an external database connection.\n * @permissionId WIX_DATA.CREATE_EXTERNAL_DATABASE_CONNECTION\n * @applicableIdentity APP\n * @returns Details of the created external database connection.\n * @fqn com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.CreateExternalDatabaseConnection\n */\nexport async function createExternalDatabaseConnection(\n  externalDatabaseConnection: NonNullablePaths<\n    ExternalDatabaseConnection,\n    `name`\n  >,\n  connectionType: ConnectionTypeWithLiterals\n): Promise<\n  NonNullablePaths<\n    ExternalDatabaseConnection,\n    ExternalDatabaseConnectionNonNullablePaths\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    externalDatabaseConnection: externalDatabaseConnection,\n    connectionType: connectionType,\n  });\n\n  const reqOpts =\n    ambassadorWixDataV1ExternalDatabaseConnection.createExternalDatabaseConnection(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)\n      ?.externalDatabaseConnection!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          externalDatabaseConnection: '$[0]',\n          connectionType: '$[1]',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['externalDatabaseConnection', 'connectionType']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Updates an external database connection.\n *\n * > **Note:** After an external database connection is updated, it only contains the values provided in the request. All previous values are lost.\n * @param name - Name of the external database connection.\n *\n * An external database connection can connect to one or more external data collections or tables. These appear as `connectionName/dataCollectionId`.\n * @public\n * @requiredField externalDatabaseConnection\n * @requiredField name\n * @param options - Options for updating an external database connection.\n * @param externalDatabaseConnection - Updated external database connection details. The existing connection is replaced with this version.\n * @permissionId WIX_DATA.UPDATE_EXTERNAL_DATABASE_CONNECTION\n * @applicableIdentity APP\n * @returns Details of the updated external database connection.\n * @fqn com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.UpdateExternalDatabaseConnection\n */\nexport async function updateExternalDatabaseConnection(\n  name: string,\n  externalDatabaseConnection: UpdateExternalDatabaseConnection\n): Promise<\n  NonNullablePaths<\n    ExternalDatabaseConnection,\n    ExternalDatabaseConnectionNonNullablePaths\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    externalDatabaseConnection: { ...externalDatabaseConnection, name: name },\n  });\n\n  const reqOpts =\n    ambassadorWixDataV1ExternalDatabaseConnection.updateExternalDatabaseConnection(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)\n      ?.externalDatabaseConnection!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: { externalDatabaseConnection: '$[1]' },\n        explicitPathsToArguments: { 'externalDatabaseConnection.name': '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['name', 'externalDatabaseConnection']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdateExternalDatabaseConnection {\n  /**\n   * Base URL for accessing and managing data in the external database. For example: `https://example.com/my-external-database`.\n   * @format WEB_URL\n   */\n  endpoint?: string | null;\n  /**\n   * Settings specified to the external database connection as part of each request.\n   *\n   * These settings can relate to authentication, tenancy, or provide any other information necessary for processing a request. Their content and structure depend on the specific requirements of the external database's API.\n   */\n  configuration?: Record<string, any> | null;\n  /**\n   * Status of the external database connection. Includes whether the connection was established successfully, and if not, the reason for the failure.\n   * @readonly\n   */\n  connectionStatus?: ConnectionStatus;\n  /**\n   * Public key used to validate requests to the external database.\n   * @readonly\n   * @maxLength 128\n   */\n  publicKey?: string | null;\n  /**\n   * Capabilities of the external database.\n   * @readonly\n   */\n  capabilities?: Capabilities;\n}\n\n/**\n * Deletes an external database connection.\n *\n * > **Note:** Once an external database connection is deleted, it can't be restored. To reconnect the database, create a new external database connection.\n * @param name - Name of the external database connection to delete.\n * @public\n * @requiredField name\n * @permissionId WIX_DATA.DELETE_EXTERNAL_DATABASE_CONNECTION\n * @applicableIdentity APP\n * @fqn com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.DeleteExternalDatabaseConnection\n */\nexport async function deleteExternalDatabaseConnection(\n  name: string\n): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ name: name });\n\n  const reqOpts =\n    ambassadorWixDataV1ExternalDatabaseConnection.deleteExternalDatabaseConnection(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { name: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['name']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixpressCloudDataApiExternaldatabaseExternalDatabaseConnectionServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/cloud-data',\n        destPath: '',\n      },\n    ],\n    'code._base_domain_': [\n      {\n        srcPath: '/_api/cloud-data/v1/data-settings',\n        destPath: '/v1/data-settings',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/schemas',\n        destPath: '/v1/schemas',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/connector',\n        destPath: '/v1/connector',\n      },\n      {\n        srcPath: '/_api/data/v1/data-settings',\n        destPath: '/v1/data-settings',\n      },\n      {\n        srcPath: '/_api/data/v1/schemas',\n        destPath: '/v1/schemas',\n      },\n      {\n        srcPath: '/_api/data/v1/connector',\n        destPath: '/v1/connector',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/wix-data',\n        destPath: '/v1/wix-data',\n      },\n    ],\n    'cloud-data.wix-code.com': [\n      {\n        srcPath: '',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/cloud-data',\n        destPath: '',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/cloud-data',\n        destPath: '',\n      },\n      {\n        srcPath: '/_api/data',\n        destPath: '',\n      },\n      {\n        srcPath: '/_api/cloud-data',\n        destPath: '',\n      },\n    ],\n    'dev._base_domain_': [\n      {\n        srcPath: '/_api/cloud-data',\n        destPath: '',\n      },\n    ],\n    'bo._base_domain_': [\n      {\n        srcPath: '/_api/cloud-data/v1',\n        destPath: '/v1',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2',\n        destPath: '/v2',\n      },\n    ],\n    'wixbo.ai': [\n      {\n        srcPath: '/_api/cloud-data/v1',\n        destPath: '/v1',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2',\n        destPath: '/v2',\n      },\n    ],\n    'wix-bo.com': [\n      {\n        srcPath: '/_api/cloud-data/v1',\n        destPath: '/v1',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2',\n        destPath: '/v2',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/cloud-data',\n        destPath: '',\n      },\n      {\n        srcPath: '/_api/data',\n        destPath: '',\n      },\n      {\n        srcPath: '/_api/cloud-data',\n        destPath: '',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/cloud-data/v1/schemas',\n        destPath: '/v1/schemas',\n      },\n      {\n        srcPath: '/_api/cloud-data/dbs/tasks',\n        destPath: '/dbs/tasks',\n      },\n      {\n        srcPath: '/_api/data/v1/schemas',\n        destPath: '/v1/schemas',\n      },\n      {\n        srcPath: '/_api/data/dbs/tasks',\n        destPath: '/dbs/tasks',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/wix-data',\n        destPath: '/v1/wix-data',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/data-settings',\n        destPath: '/v1/data-settings',\n      },\n      {\n        srcPath: '/_api/data/v2/indexes',\n        destPath: '/v2/indexes',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/external-database-connections',\n        destPath: '/v1/external-database-connections',\n      },\n      {\n        srcPath: '/_api/data/v1/data-collection-sharing',\n        destPath: '/v1/data-collection-sharing',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/collections',\n        destPath: '/v2/collections',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/bulk',\n        destPath: '/v2/bulk',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/items',\n        destPath: '/v2/items',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/dbs/tasks',\n        destPath: '/v2/dbs/tasks',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/cloud-data/v1/schemas',\n        destPath: '/v1/schemas',\n      },\n      {\n        srcPath: '/_api/cloud-data/dbs/tasks',\n        destPath: '/dbs/tasks',\n      },\n      {\n        srcPath: '/_api/data/v1/schemas',\n        destPath: '/v1/schemas',\n      },\n      {\n        srcPath: '/_api/data/dbs/tasks',\n        destPath: '/dbs/tasks',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/wix-data',\n        destPath: '/v1/wix-data',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/data-settings',\n        destPath: '/v1/data-settings',\n      },\n      {\n        srcPath: '/_api/data/v2/indexes',\n        destPath: '/v2/indexes',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/external-database-connections',\n        destPath: '/v1/external-database-connections',\n      },\n      {\n        srcPath: '/_api/data/v1/data-collection-sharing',\n        destPath: '/v1/data-collection-sharing',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/collections',\n        destPath: '/v2/collections',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/bulk',\n        destPath: '/v2/bulk',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/items',\n        destPath: '/v2/items',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/dbs/tasks',\n        destPath: '/v2/dbs/tasks',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/cloud-data/v1/schemas',\n        destPath: '/v1/schemas',\n      },\n      {\n        srcPath: '/_api/cloud-data/dbs/tasks',\n        destPath: '/dbs/tasks',\n      },\n      {\n        srcPath: '/_api/data/v1/schemas',\n        destPath: '/v1/schemas',\n      },\n      {\n        srcPath: '/_api/data/dbs/tasks',\n        destPath: '/dbs/tasks',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/wix-data',\n        destPath: '/v1/wix-data',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/data-settings',\n        destPath: '/v1/data-settings',\n      },\n      {\n        srcPath: '/_api/data/v2/indexes',\n        destPath: '/v2/indexes',\n      },\n      {\n        srcPath: '/_api/cloud-data/v1/external-database-connections',\n        destPath: '/v1/external-database-connections',\n      },\n      {\n        srcPath: '/_api/data/v1/data-collection-sharing',\n        destPath: '/v1/data-collection-sharing',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/collections',\n        destPath: '/v2/collections',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/bulk',\n        destPath: '/v2/bulk',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/items',\n        destPath: '/v2/items',\n      },\n      {\n        srcPath: '/_api/cloud-data/v2/dbs/tasks',\n        destPath: '/v2/dbs/tasks',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/wix-data/v1/collections',\n        destPath: '/v1/wix-data/collections',\n      },\n      {\n        srcPath: '/wix-data/v1/external-database-connections',\n        destPath: '/v1/external-database-connections',\n      },\n      {\n        srcPath: '/wix-data/v2/indexes',\n        destPath: '/v2/indexes',\n      },\n      {\n        srcPath: '/wix-data/v1/items',\n        destPath: '/v1/items',\n      },\n      {\n        srcPath: '/wix-data/v1/bulk',\n        destPath: '/v1/bulk',\n      },\n      {\n        srcPath: '/wix-data/v1/external-databases',\n        destPath: '/v1/external-databases',\n      },\n      {\n        srcPath: '/wix-data/v2',\n        destPath: '/v2',\n      },\n    ],\n    'www.wixgateway.com': [\n      {\n        srcPath: '/wix-data/v1/items',\n        destPath: '/v1/items',\n      },\n      {\n        srcPath: '/wix-data/v1/bulk',\n        destPath: '/v1/bulk',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/cloud-data/v2',\n        destPath: '/v2',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_data_external-database-connections';\n\n/** Retrieves the specified external database connection. */\nexport function getExternalDatabaseConnection(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getExternalDatabaseConnection({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.data.v1.external_database_connection',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.GetExternalDatabaseConnection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressCloudDataApiExternaldatabaseExternalDatabaseConnectionServiceUrl(\n        {\n          protoPath: '/v1/external-database-connections/{name}',\n          data: payload,\n          host,\n        }\n      ),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __getExternalDatabaseConnection;\n}\n\n/** Lists all of the site's external database connections of all adaptor types. */\nexport function listExternalDatabaseConnections(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __listExternalDatabaseConnections({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.data.v1.external_database_connection',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.ListExternalDatabaseConnections',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressCloudDataApiExternaldatabaseExternalDatabaseConnectionServiceUrl(\n        { protoPath: '/v1/external-database-connections', data: payload, host }\n      ),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __listExternalDatabaseConnections;\n}\n\n/**\n * Creates a new external database connection.\n *\n * Before you can establish a connection between a site and an external database, you must prepare an external database adaptor.\n */\nexport function createExternalDatabaseConnection(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __createExternalDatabaseConnection({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.data.v1.external_database_connection',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.CreateExternalDatabaseConnection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressCloudDataApiExternaldatabaseExternalDatabaseConnectionServiceUrl(\n        { protoPath: '/v1/external-database-connections', data: payload, host }\n      ),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __createExternalDatabaseConnection;\n}\n\n/**\n * Updates an external database connection.\n *\n * > **Note:** After an external database connection is updated, it only contains the values provided in the request. All previous values are lost.\n */\nexport function updateExternalDatabaseConnection(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateExternalDatabaseConnection({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.data.v1.external_database_connection',\n      method: 'PUT' as any,\n      methodFqn:\n        'com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.UpdateExternalDatabaseConnection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressCloudDataApiExternaldatabaseExternalDatabaseConnectionServiceUrl(\n        {\n          protoPath:\n            '/v1/external-database-connections/{externalDatabaseConnection.name}',\n          data: payload,\n          host,\n        }\n      ),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __updateExternalDatabaseConnection;\n}\n\n/**\n * Deletes an external database connection.\n *\n * > **Note:** Once an external database connection is deleted, it can't be restored. To reconnect the database, create a new external database connection.\n */\nexport function deleteExternalDatabaseConnection(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteExternalDatabaseConnection({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.data.v1.external_database_connection',\n      method: 'DELETE' as any,\n      methodFqn:\n        'com.wixpress.cloud.data.api.externaldatabase.ExternalDatabaseConnectionService.DeleteExternalDatabaseConnection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixpressCloudDataApiExternaldatabaseExternalDatabaseConnectionServiceUrl(\n        {\n          protoPath: '/v1/external-database-connections/{name}',\n          data: payload,\n          host,\n        }\n      ),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteExternalDatabaseConnection;\n}\n"],"mappings":"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","names":["CauseOfFailure","CollectionsFound","FieldType","ProtocolVersion","ConnectionType","WebhookIdentityType","getExternalDatabaseConnection","listExternalDatabaseConnections","createExternalDatabaseConnection","updateExternalDatabaseConnection","deleteExternalDatabaseConnection"]}