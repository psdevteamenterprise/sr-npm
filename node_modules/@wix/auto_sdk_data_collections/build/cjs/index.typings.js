"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.typings.ts
var index_typings_exports = {};
__export(index_typings_exports, {
  AccessLevel: () => AccessLevel,
  CollectionOperation: () => CollectionOperation,
  CollectionType: () => CollectionType,
  DataOperation: () => DataOperation,
  Direction: () => Direction,
  FieldPluginType: () => FieldPluginType,
  Format: () => Format,
  IndexSource: () => IndexSource,
  IndexStatus: () => IndexStatus,
  Order: () => Order,
  PagingMode: () => PagingMode,
  PluginType: () => PluginType,
  QueryOperator: () => QueryOperator,
  Role: () => Role,
  Segment: () => Segment,
  SortOrder: () => SortOrder,
  Status: () => Status,
  Type: () => Type,
  WebhookIdentityType: () => WebhookIdentityType,
  createDataCollection: () => createDataCollection2,
  createDataCollectionField: () => createDataCollectionField2,
  deleteDataCollection: () => deleteDataCollection2,
  deleteDataCollectionField: () => deleteDataCollectionField2,
  getDataCollection: () => getDataCollection2,
  listDataCollections: () => listDataCollections2,
  restoreDataCollection: () => restoreDataCollection2,
  updateDataCollection: () => updateDataCollection2,
  updateDataCollectionField: () => updateDataCollectionField2
});
module.exports = __toCommonJS(index_typings_exports);

// src/data-v2-data-collection-collections.universal.ts
var import_transform_error = require("@wix/sdk-runtime/transform-error");
var import_rename_all_nested_keys = require("@wix/sdk-runtime/rename-all-nested-keys");

// src/data-v2-data-collection-collections.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_float2 = require("@wix/sdk-runtime/transformations/float");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/cloud-data",
        destPath: ""
      }
    ],
    "code._base_domain_": [
      {
        srcPath: "/_api/cloud-data/v1/data-settings",
        destPath: "/v1/data-settings"
      },
      {
        srcPath: "/_api/cloud-data/v1/schemas",
        destPath: "/v1/schemas"
      },
      {
        srcPath: "/_api/cloud-data/v1/connector",
        destPath: "/v1/connector"
      },
      {
        srcPath: "/_api/data/v1/data-settings",
        destPath: "/v1/data-settings"
      },
      {
        srcPath: "/_api/data/v1/schemas",
        destPath: "/v1/schemas"
      },
      {
        srcPath: "/_api/data/v1/connector",
        destPath: "/v1/connector"
      },
      {
        srcPath: "/_api/cloud-data/v1/wix-data",
        destPath: "/v1/wix-data"
      }
    ],
    "cloud-data.wix-code.com": [
      {
        srcPath: "",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/cloud-data",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/cloud-data",
        destPath: ""
      },
      {
        srcPath: "/_api/data",
        destPath: ""
      },
      {
        srcPath: "/_api/cloud-data",
        destPath: ""
      }
    ],
    "dev._base_domain_": [
      {
        srcPath: "/_api/cloud-data",
        destPath: ""
      }
    ],
    "bo._base_domain_": [
      {
        srcPath: "/_api/cloud-data/v1",
        destPath: "/v1"
      },
      {
        srcPath: "/_api/cloud-data/v2",
        destPath: "/v2"
      }
    ],
    "wixbo.ai": [
      {
        srcPath: "/_api/cloud-data/v1",
        destPath: "/v1"
      },
      {
        srcPath: "/_api/cloud-data/v2",
        destPath: "/v2"
      }
    ],
    "wix-bo.com": [
      {
        srcPath: "/_api/cloud-data/v1",
        destPath: "/v1"
      },
      {
        srcPath: "/_api/cloud-data/v2",
        destPath: "/v2"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/cloud-data",
        destPath: ""
      },
      {
        srcPath: "/_api/data",
        destPath: ""
      },
      {
        srcPath: "/_api/cloud-data",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/cloud-data/v1/schemas",
        destPath: "/v1/schemas"
      },
      {
        srcPath: "/_api/cloud-data/dbs/tasks",
        destPath: "/dbs/tasks"
      },
      {
        srcPath: "/_api/data/v1/schemas",
        destPath: "/v1/schemas"
      },
      {
        srcPath: "/_api/data/dbs/tasks",
        destPath: "/dbs/tasks"
      },
      {
        srcPath: "/_api/cloud-data/v1/wix-data",
        destPath: "/v1/wix-data"
      },
      {
        srcPath: "/_api/cloud-data/v1/data-settings",
        destPath: "/v1/data-settings"
      },
      {
        srcPath: "/_api/data/v2/indexes",
        destPath: "/v2/indexes"
      },
      {
        srcPath: "/_api/cloud-data/v1/external-database-connections",
        destPath: "/v1/external-database-connections"
      },
      {
        srcPath: "/_api/data/v1/data-collection-sharing",
        destPath: "/v1/data-collection-sharing"
      },
      {
        srcPath: "/_api/cloud-data/v2/collections",
        destPath: "/v2/collections"
      },
      {
        srcPath: "/_api/cloud-data/v2/bulk",
        destPath: "/v2/bulk"
      },
      {
        srcPath: "/_api/cloud-data/v2/items",
        destPath: "/v2/items"
      },
      {
        srcPath: "/_api/cloud-data/v2/dbs/tasks",
        destPath: "/v2/dbs/tasks"
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/cloud-data/v1/schemas",
        destPath: "/v1/schemas"
      },
      {
        srcPath: "/_api/cloud-data/dbs/tasks",
        destPath: "/dbs/tasks"
      },
      {
        srcPath: "/_api/data/v1/schemas",
        destPath: "/v1/schemas"
      },
      {
        srcPath: "/_api/data/dbs/tasks",
        destPath: "/dbs/tasks"
      },
      {
        srcPath: "/_api/cloud-data/v1/wix-data",
        destPath: "/v1/wix-data"
      },
      {
        srcPath: "/_api/cloud-data/v1/data-settings",
        destPath: "/v1/data-settings"
      },
      {
        srcPath: "/_api/data/v2/indexes",
        destPath: "/v2/indexes"
      },
      {
        srcPath: "/_api/cloud-data/v1/external-database-connections",
        destPath: "/v1/external-database-connections"
      },
      {
        srcPath: "/_api/data/v1/data-collection-sharing",
        destPath: "/v1/data-collection-sharing"
      },
      {
        srcPath: "/_api/cloud-data/v2/collections",
        destPath: "/v2/collections"
      },
      {
        srcPath: "/_api/cloud-data/v2/bulk",
        destPath: "/v2/bulk"
      },
      {
        srcPath: "/_api/cloud-data/v2/items",
        destPath: "/v2/items"
      },
      {
        srcPath: "/_api/cloud-data/v2/dbs/tasks",
        destPath: "/v2/dbs/tasks"
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/cloud-data/v1/schemas",
        destPath: "/v1/schemas"
      },
      {
        srcPath: "/_api/cloud-data/dbs/tasks",
        destPath: "/dbs/tasks"
      },
      {
        srcPath: "/_api/data/v1/schemas",
        destPath: "/v1/schemas"
      },
      {
        srcPath: "/_api/data/dbs/tasks",
        destPath: "/dbs/tasks"
      },
      {
        srcPath: "/_api/cloud-data/v1/wix-data",
        destPath: "/v1/wix-data"
      },
      {
        srcPath: "/_api/cloud-data/v1/data-settings",
        destPath: "/v1/data-settings"
      },
      {
        srcPath: "/_api/data/v2/indexes",
        destPath: "/v2/indexes"
      },
      {
        srcPath: "/_api/cloud-data/v1/external-database-connections",
        destPath: "/v1/external-database-connections"
      },
      {
        srcPath: "/_api/data/v1/data-collection-sharing",
        destPath: "/v1/data-collection-sharing"
      },
      {
        srcPath: "/_api/cloud-data/v2/collections",
        destPath: "/v2/collections"
      },
      {
        srcPath: "/_api/cloud-data/v2/bulk",
        destPath: "/v2/bulk"
      },
      {
        srcPath: "/_api/cloud-data/v2/items",
        destPath: "/v2/items"
      },
      {
        srcPath: "/_api/cloud-data/v2/dbs/tasks",
        destPath: "/v2/dbs/tasks"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/wix-data/v1/collections",
        destPath: "/v1/wix-data/collections"
      },
      {
        srcPath: "/wix-data/v1/external-database-connections",
        destPath: "/v1/external-database-connections"
      },
      {
        srcPath: "/wix-data/v2/indexes",
        destPath: "/v2/indexes"
      },
      {
        srcPath: "/wix-data/v1/items",
        destPath: "/v1/items"
      },
      {
        srcPath: "/wix-data/v1/bulk",
        destPath: "/v1/bulk"
      },
      {
        srcPath: "/wix-data/v1/external-databases",
        destPath: "/v1/external-databases"
      },
      {
        srcPath: "/wix-data/v2",
        destPath: "/v2"
      }
    ],
    "www.wixgateway.com": [
      {
        srcPath: "/wix-data/v1/items",
        destPath: "/v1/items"
      },
      {
        srcPath: "/wix-data/v1/bulk",
        destPath: "/v1/bulk"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/cloud-data/v2",
        destPath: "/v2"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_data_collections";
function createDataCollection(payload) {
  function __createDataCollection({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "collection.createdDate" },
          { path: "collection.updatedDate" }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "collection.fields.numberRange.min" },
          { path: "collection.fields.numberRange.max" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.data.v2.data_collection",
      method: "POST",
      methodFqn: "com.wixpress.cloud.data.api.collectionservice.DataCollectionService.CreateDataCollection",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(
        { protoPath: "/v2/collections", data: serializedData, host }
      ),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "collection.createdDate" },
            { path: "collection.updatedDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "collection.fields.numberRange.min" },
            { path: "collection.fields.numberRange.max" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createDataCollection;
}
function getDataCollection(payload) {
  function __getDataCollection({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.data_collection",
      method: "GET",
      methodFqn: "com.wixpress.cloud.data.api.collectionservice.DataCollectionService.GetDataCollection",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(
        { protoPath: "/v2/collections/{dataCollectionId}", data: payload, host }
      ),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "collection.createdDate" },
            { path: "collection.updatedDate" },
            { path: "referencedCollections.createdDate" },
            { path: "referencedCollections.updatedDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "collection.fields.numberRange.min" },
            { path: "collection.fields.numberRange.max" },
            { path: "referencedCollections.fields.numberRange.min" },
            { path: "referencedCollections.fields.numberRange.max" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getDataCollection;
}
function listDataCollections(payload) {
  function __listDataCollections({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.data_collection",
      method: "GET",
      methodFqn: "com.wixpress.cloud.data.api.collectionservice.DataCollectionService.ListDataCollections",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(
        { protoPath: "/v2/collections", data: payload, host }
      ),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "collections.createdDate" },
            { path: "collections.updatedDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "collections.fields.numberRange.min" },
            { path: "collections.fields.numberRange.max" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __listDataCollections;
}
function updateDataCollection(payload) {
  function __updateDataCollection({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "collection.createdDate" },
          { path: "collection.updatedDate" }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "collection.fields.numberRange.min" },
          { path: "collection.fields.numberRange.max" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.data.v2.data_collection",
      method: "PUT",
      methodFqn: "com.wixpress.cloud.data.api.collectionservice.DataCollectionService.UpdateDataCollection",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(
        { protoPath: "/v2/collections", data: serializedData, host }
      ),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "collection.createdDate" },
            { path: "collection.updatedDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "collection.fields.numberRange.min" },
            { path: "collection.fields.numberRange.max" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateDataCollection;
}
function deleteDataCollection(payload) {
  function __deleteDataCollection({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.data_collection",
      method: "DELETE",
      methodFqn: "com.wixpress.cloud.data.api.collectionservice.DataCollectionService.DeleteDataCollection",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(
        { protoPath: "/v2/collections/{dataCollectionId}", data: payload, host }
      ),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteDataCollection;
}
function restoreDataCollection(payload) {
  function __restoreDataCollection({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.data_collection",
      method: "POST",
      methodFqn: "com.wixpress.cloud.data.api.collectionservice.DataCollectionService.RestoreDataCollection",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(
        {
          protoPath: "/v2/collections/restore/{dataCollectionId}",
          data: payload,
          host
        }
      ),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "dataCollection.createdDate" },
            { path: "dataCollection.updatedDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "dataCollection.fields.numberRange.min" },
            { path: "dataCollection.fields.numberRange.max" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __restoreDataCollection;
}
function createDataCollectionField(payload) {
  function __createDataCollectionField({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "field.numberRange.min" },
          { path: "field.numberRange.max" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.data.v2.data_collection",
      method: "POST",
      methodFqn: "com.wixpress.cloud.data.api.collectionservice.DataCollectionService.CreateDataCollectionField",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(
        {
          protoPath: "/v2/collections/create-field",
          data: serializedData,
          host
        }
      ),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "dataCollection.createdDate" },
            { path: "dataCollection.updatedDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "dataCollection.fields.numberRange.min" },
            { path: "dataCollection.fields.numberRange.max" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createDataCollectionField;
}
function updateDataCollectionField(payload) {
  function __updateDataCollectionField({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "field.numberRange.min" },
          { path: "field.numberRange.max" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.data.v2.data_collection",
      method: "POST",
      methodFqn: "com.wixpress.cloud.data.api.collectionservice.DataCollectionService.UpdateDataCollectionField",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(
        {
          protoPath: "/v2/collections/update-field",
          data: serializedData,
          host
        }
      ),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "dataCollection.createdDate" },
            { path: "dataCollection.updatedDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "dataCollection.fields.numberRange.min" },
            { path: "dataCollection.fields.numberRange.max" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateDataCollectionField;
}
function deleteDataCollectionField(payload) {
  function __deleteDataCollectionField({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.data_collection",
      method: "POST",
      methodFqn: "com.wixpress.cloud.data.api.collectionservice.DataCollectionService.DeleteDataCollectionField",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressCloudDataApiCollectionserviceDataCollectionServiceUrl(
        { protoPath: "/v2/collections/delete-field", data: payload, host }
      ),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "dataCollection.createdDate" },
            { path: "dataCollection.updatedDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "dataCollection.fields.numberRange.min" },
            { path: "dataCollection.fields.numberRange.max" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __deleteDataCollectionField;
}

// src/data-v2-data-collection-collections.universal.ts
var CollectionType = /* @__PURE__ */ ((CollectionType2) => {
  CollectionType2["NATIVE"] = "NATIVE";
  CollectionType2["WIX_APP"] = "WIX_APP";
  CollectionType2["BLOCKS_APP"] = "BLOCKS_APP";
  CollectionType2["EXTERNAL"] = "EXTERNAL";
  return CollectionType2;
})(CollectionType || {});
var Direction = /* @__PURE__ */ ((Direction2) => {
  Direction2["ASC"] = "ASC";
  Direction2["DESC"] = "DESC";
  return Direction2;
})(Direction || {});
var DataOperation = /* @__PURE__ */ ((DataOperation2) => {
  DataOperation2["AGGREGATE"] = "AGGREGATE";
  DataOperation2["BULK_INSERT"] = "BULK_INSERT";
  DataOperation2["BULK_REMOVE"] = "BULK_REMOVE";
  DataOperation2["BULK_SAVE"] = "BULK_SAVE";
  DataOperation2["BULK_UPDATE"] = "BULK_UPDATE";
  DataOperation2["COUNT"] = "COUNT";
  DataOperation2["DISTINCT"] = "DISTINCT";
  DataOperation2["FIND"] = "FIND";
  DataOperation2["GET"] = "GET";
  DataOperation2["INSERT"] = "INSERT";
  DataOperation2["INSERT_REFERENCE"] = "INSERT_REFERENCE";
  DataOperation2["IS_REFERENCED"] = "IS_REFERENCED";
  DataOperation2["QUERY_REFERENCED"] = "QUERY_REFERENCED";
  DataOperation2["REMOVE"] = "REMOVE";
  DataOperation2["REMOVE_REFERENCE"] = "REMOVE_REFERENCE";
  DataOperation2["REPLACE_REFERENCES"] = "REPLACE_REFERENCES";
  DataOperation2["SAVE"] = "SAVE";
  DataOperation2["TRUNCATE"] = "TRUNCATE";
  DataOperation2["UPDATE"] = "UPDATE";
  DataOperation2["PATCH"] = "PATCH";
  DataOperation2["BULK_PATCH"] = "BULK_PATCH";
  return DataOperation2;
})(DataOperation || {});
var CollectionOperation = /* @__PURE__ */ ((CollectionOperation2) => {
  CollectionOperation2["UPDATE"] = "UPDATE";
  CollectionOperation2["REMOVE"] = "REMOVE";
  return CollectionOperation2;
})(CollectionOperation || {});
var Type = /* @__PURE__ */ ((Type2) => {
  Type2["UNKNOWN_FIELD_TYPE"] = "UNKNOWN_FIELD_TYPE";
  Type2["TEXT"] = "TEXT";
  Type2["NUMBER"] = "NUMBER";
  Type2["DATE"] = "DATE";
  Type2["DATETIME"] = "DATETIME";
  Type2["IMAGE"] = "IMAGE";
  Type2["BOOLEAN"] = "BOOLEAN";
  Type2["DOCUMENT"] = "DOCUMENT";
  Type2["URL"] = "URL";
  Type2["RICH_TEXT"] = "RICH_TEXT";
  Type2["VIDEO"] = "VIDEO";
  Type2["ANY"] = "ANY";
  Type2["ARRAY_STRING"] = "ARRAY_STRING";
  Type2["ARRAY_DOCUMENT"] = "ARRAY_DOCUMENT";
  Type2["AUDIO"] = "AUDIO";
  Type2["TIME"] = "TIME";
  Type2["LANGUAGE"] = "LANGUAGE";
  Type2["RICH_CONTENT"] = "RICH_CONTENT";
  Type2["MEDIA_GALLERY"] = "MEDIA_GALLERY";
  Type2["ADDRESS"] = "ADDRESS";
  Type2["PAGE_LINK"] = "PAGE_LINK";
  Type2["REFERENCE"] = "REFERENCE";
  Type2["MULTI_REFERENCE"] = "MULTI_REFERENCE";
  Type2["OBJECT"] = "OBJECT";
  Type2["ARRAY"] = "ARRAY";
  Type2["LEGACY_TIME"] = "LEGACY_TIME";
  Type2["LEGACY_BOOK"] = "LEGACY_BOOK";
  Type2["LEGACY_EXTERNAL_URL"] = "LEGACY_EXTERNAL_URL";
  Type2["LEGACY_BROKEN_REFERENCE"] = "LEGACY_BROKEN_REFERENCE";
  Type2["LEGACY_IMAGE"] = "LEGACY_IMAGE";
  Type2["LEGACY_COLOR"] = "LEGACY_COLOR";
  Type2["LEGACY_EXTERNAL_VIDEO"] = "LEGACY_EXTERNAL_VIDEO";
  return Type2;
})(Type || {});
var QueryOperator = /* @__PURE__ */ ((QueryOperator2) => {
  QueryOperator2["EQ"] = "EQ";
  QueryOperator2["LT"] = "LT";
  QueryOperator2["GT"] = "GT";
  QueryOperator2["NE"] = "NE";
  QueryOperator2["LTE"] = "LTE";
  QueryOperator2["GTE"] = "GTE";
  QueryOperator2["STARTS_WITH"] = "STARTS_WITH";
  QueryOperator2["ENDS_WITH"] = "ENDS_WITH";
  QueryOperator2["CONTAINS"] = "CONTAINS";
  QueryOperator2["HAS_SOME"] = "HAS_SOME";
  QueryOperator2["HAS_ALL"] = "HAS_ALL";
  QueryOperator2["EXISTS"] = "EXISTS";
  QueryOperator2["URLIZED"] = "URLIZED";
  return QueryOperator2;
})(QueryOperator || {});
var FieldPluginType = /* @__PURE__ */ ((FieldPluginType2) => {
  FieldPluginType2["UNKNOWN"] = "UNKNOWN";
  FieldPluginType2["CMS"] = "CMS";
  return FieldPluginType2;
})(FieldPluginType || {});
var Role = /* @__PURE__ */ ((Role2) => {
  Role2["UNKNOWN_ROLE"] = "UNKNOWN_ROLE";
  Role2["ADMIN"] = "ADMIN";
  Role2["SITE_MEMBER_AUTHOR"] = "SITE_MEMBER_AUTHOR";
  Role2["SITE_MEMBER"] = "SITE_MEMBER";
  Role2["ANYONE"] = "ANYONE";
  return Role2;
})(Role || {});
var Status = /* @__PURE__ */ ((Status2) => {
  Status2["UNKNOWN_PUBLISH_PLUGIN_STATUS"] = "UNKNOWN_PUBLISH_PLUGIN_STATUS";
  Status2["PUBLISHED"] = "PUBLISHED";
  Status2["DRAFT"] = "DRAFT";
  return Status2;
})(Status || {});
var Format = /* @__PURE__ */ ((Format2) => {
  Format2["UNKNOWN_URLIZED_PLUGIN_FORMAT"] = "UNKNOWN_URLIZED_PLUGIN_FORMAT";
  Format2["ORIGINAL"] = "ORIGINAL";
  Format2["PLAIN"] = "PLAIN";
  return Format2;
})(Format || {});
var PluginType = /* @__PURE__ */ ((PluginType2) => {
  PluginType2["UNKNOWN_PLUGIN_TYPE"] = "UNKNOWN_PLUGIN_TYPE";
  PluginType2["PUBLISH"] = "PUBLISH";
  PluginType2["SINGLE_ITEM"] = "SINGLE_ITEM";
  PluginType2["URLIZED"] = "URLIZED";
  PluginType2["GRIDAPPLESS"] = "GRIDAPPLESS";
  PluginType2["MULTILINGUAL"] = "MULTILINGUAL";
  PluginType2["SHARED"] = "SHARED";
  PluginType2["EDITABLE_PAGE_LINK"] = "EDITABLE_PAGE_LINK";
  PluginType2["CMS"] = "CMS";
  return PluginType2;
})(PluginType || {});
var PagingMode = /* @__PURE__ */ ((PagingMode2) => {
  PagingMode2["OFFSET"] = "OFFSET";
  PagingMode2["CURSOR"] = "CURSOR";
  return PagingMode2;
})(PagingMode || {});
var AccessLevel = /* @__PURE__ */ ((AccessLevel2) => {
  AccessLevel2["UNDEFINED"] = "UNDEFINED";
  AccessLevel2["ANYONE"] = "ANYONE";
  AccessLevel2["SITE_MEMBER"] = "SITE_MEMBER";
  AccessLevel2["SITE_MEMBER_AUTHOR"] = "SITE_MEMBER_AUTHOR";
  AccessLevel2["CMS_EDITOR"] = "CMS_EDITOR";
  AccessLevel2["PRIVILEGED"] = "PRIVILEGED";
  return AccessLevel2;
})(AccessLevel || {});
var Segment = /* @__PURE__ */ ((Segment2) => {
  Segment2["UNKNOWN_SEGMENT"] = "UNKNOWN_SEGMENT";
  Segment2["PUBLIC"] = "PUBLIC";
  Segment2["DEV"] = "DEV";
  return Segment2;
})(Segment || {});
var SortOrder = /* @__PURE__ */ ((SortOrder2) => {
  SortOrder2["ASC"] = "ASC";
  SortOrder2["DESC"] = "DESC";
  return SortOrder2;
})(SortOrder || {});
var Order = /* @__PURE__ */ ((Order2) => {
  Order2["ASC"] = "ASC";
  Order2["DESC"] = "DESC";
  return Order2;
})(Order || {});
var IndexStatus = /* @__PURE__ */ ((IndexStatus2) => {
  IndexStatus2["UNKNOWN"] = "UNKNOWN";
  IndexStatus2["BUILDING"] = "BUILDING";
  IndexStatus2["ACTIVE"] = "ACTIVE";
  IndexStatus2["DROPPING"] = "DROPPING";
  IndexStatus2["DROPPED"] = "DROPPED";
  IndexStatus2["FAILED"] = "FAILED";
  IndexStatus2["INVALID"] = "INVALID";
  return IndexStatus2;
})(IndexStatus || {});
var IndexSource = /* @__PURE__ */ ((IndexSource2) => {
  IndexSource2["UNKNOWN_INDEX_SOURCE"] = "UNKNOWN_INDEX_SOURCE";
  IndexSource2["SYSTEM"] = "SYSTEM";
  IndexSource2["USER"] = "USER";
  IndexSource2["AUTO"] = "AUTO";
  return IndexSource2;
})(IndexSource || {});
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
async function createDataCollection2(collection) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    collection
  });
  const reqOpts = createDataCollection(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.collection;
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { collection: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["collection"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function getDataCollection2(dataCollectionId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    dataCollectionId,
    consistentRead: options?.consistentRead,
    fields: options?.fields
  });
  const reqOpts = getDataCollection(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.collection;
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          dataCollectionId: "$[0]",
          consistentRead: "$[1].consistentRead",
          fields: "$[1].fields"
        },
        singleArgumentUnchanged: false
      },
      ["dataCollectionId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function listDataCollections2(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    sort: options?.sort,
    paging: options?.paging,
    consistentRead: options?.consistentRead,
    fields: options?.fields
  });
  const reqOpts = listDataCollections(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          sort: "$[0].sort",
          paging: "$[0].paging",
          consistentRead: "$[0].consistentRead",
          fields: "$[0].fields"
        },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function updateDataCollection2(collection) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    collection
  });
  const reqOpts = updateDataCollection(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.collection;
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { collection: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["collection"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function deleteDataCollection2(dataCollectionId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    dataCollectionId
  });
  const reqOpts = deleteDataCollection(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { dataCollectionId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["dataCollectionId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function restoreDataCollection2(dataCollectionId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    dataCollectionId
  });
  const reqOpts = restoreDataCollection(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { dataCollectionId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["dataCollectionId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function createDataCollectionField2(dataCollectionId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    dataCollectionId,
    field: options?.field
  });
  const reqOpts = createDataCollectionField(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          dataCollectionId: "$[0]",
          field: "$[1].field"
        },
        singleArgumentUnchanged: false
      },
      ["dataCollectionId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function updateDataCollectionField2(dataCollectionId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    dataCollectionId,
    field: options?.field
  });
  const reqOpts = updateDataCollectionField(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          dataCollectionId: "$[0]",
          field: "$[1].field"
        },
        singleArgumentUnchanged: false
      },
      ["dataCollectionId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function deleteDataCollectionField2(dataCollectionId, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    dataCollectionId,
    fieldKey: options?.fieldKey
  });
  const reqOpts = deleteDataCollectionField(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          dataCollectionId: "$[0]",
          fieldKey: "$[1].fieldKey"
        },
        singleArgumentUnchanged: false
      },
      ["dataCollectionId", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AccessLevel,
  CollectionOperation,
  CollectionType,
  DataOperation,
  Direction,
  FieldPluginType,
  Format,
  IndexSource,
  IndexStatus,
  Order,
  PagingMode,
  PluginType,
  QueryOperator,
  Role,
  Segment,
  SortOrder,
  Status,
  Type,
  WebhookIdentityType,
  createDataCollection,
  createDataCollectionField,
  deleteDataCollection,
  deleteDataCollectionField,
  getDataCollection,
  listDataCollections,
  restoreDataCollection,
  updateDataCollection,
  updateDataCollectionField
});
//# sourceMappingURL=index.typings.js.map