{"version":3,"sources":["../../src/hub-v1-job-movement-jobs.http.ts","../../src/hub-v1-job-movement-jobs.meta.ts"],"sourcesContent":["import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixHubV1DataMovementServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/wix-data-hub-fs2',\n        destPath: '',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/wix-data-hub-fs2',\n        destPath: '',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/wix-data-hub-fs2',\n        destPath: '',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/wix-data-hub-fs2',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/data-mover',\n        destPath: '',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/wix-data-hub-fs2',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/wix-data-hub-fs2',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_data_movement-jobs';\n\n/**\n * Submit a data movement job.\n *\n * > **Note**: By default, the job is submitted for the current site.\n */\nexport function submitJob(payload: object): RequestOptionsFactory<any> {\n  function __submitJob({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.hub.v1.job',\n      method: 'POST' as any,\n      methodFqn: 'wix.hub.v1.DataMovementService.SubmitJob',\n      packageName: PACKAGE_NAME,\n      url: resolveWixHubV1DataMovementServiceUrl({\n        protoPath: '/v1/jobs',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [{ path: 'job.startedAt' }, { path: 'job.finishedAt' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __submitJob;\n}\n\n/**\n * Creates an upload URL for a data source file.\n *\n * Before submitting a job to import data from a file to a collection, call this method to generate an upload URL. Use the `uploadUrl` in the response to upload your source file. For example:\n *\n * `curl --request PUT --upload-file \"${path_to_file}\" \"${uploadUrl}\"`\n *\n * > **Note**: The URL is valid for 15 minutes.\n */\nexport function createFileUploadUrl(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __createFileUploadUrl({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.hub.v1.job',\n      method: 'POST' as any,\n      methodFqn: 'wix.hub.v1.DataMovementService.CreateFileUploadUrl',\n      packageName: PACKAGE_NAME,\n      url: resolveWixHubV1DataMovementServiceUrl({\n        protoPath: '/v1/temporary-files/upload-url',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __createFileUploadUrl;\n}\n\n/**\n * Retrieves the specified data movement job.\n *\n * > **Note**: You can only retrieve jobs submitted for the current site.\n */\nexport function getJob(payload: object): RequestOptionsFactory<any> {\n  function __getJob({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.hub.v1.job',\n      method: 'GET' as any,\n      methodFqn: 'wix.hub.v1.DataMovementService.GetJob',\n      packageName: PACKAGE_NAME,\n      url: resolveWixHubV1DataMovementServiceUrl({\n        protoPath: '/v1/jobs/{jobId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [{ path: 'job.startedAt' }, { path: 'job.finishedAt' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getJob;\n}\n\n/**\n * Lists data movement jobs for the current site.\n *  The `listJobs()` method builds a query to retrieve a list of jobs for the current site, and returns a [`JobsQueryBuilder`](https://dev.wix.com/docs/sdk/backend-modules/data/movement-job/jobs-query-builder/ascending) object.\n *  The returned object contains the query definition, which is typically used to run the query using the [`find()`](https://dev.wix.com/docs/sdk/backend-modules/data/movement-job/jobs-query-builder/find) method.\n *\n *  You can refine the query by chaining `JobsQueryBuilder` methods onto the query. `JobsQueryBuilder` methods enable you to sort, filter, and control the results `listJobs()` returns.\n *\n * `listJobs()` runs with these `JobsQueryBuilder` defaults, which you can override:\n *\n * - [`skipTo`: `0`](https://dev.wix.com/docs/sdk/backend-modules/data/movement-job/jobs-query-builder/skip-to)\n * - [`limit`: `50`](https://dev.wix.com/docs/sdk/backend-modules/data/movement-job/jobs-query-builder/limit)\n * - [`ascending`: by `_id`](https://dev.wix.com/docs/sdk/backend-modules/data/movement-job/jobs-query-builder/ascending)\n *\n * The methods chained to `listJobs()` are applied in the order they're called. For example, if you apply `ascending('firstName')` and then `descending('age')`, the results are sorted first by firstName, and then, if there are multiple results with the same `firstName`, the items are sorted by `age`.\n *\n */\nexport function listJobs(payload: object): RequestOptionsFactory<any> {\n  function __listJobs({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.hub.v1.job',\n      method: 'POST' as any,\n      methodFqn: 'wix.hub.v1.DataMovementService.ListJobs',\n      packageName: PACKAGE_NAME,\n      url: resolveWixHubV1DataMovementServiceUrl({\n        protoPath: '/v1/jobs/list',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [{ path: 'jobs.startedAt' }, { path: 'jobs.finishedAt' }],\n          },\n        ]),\n      fallback: [\n        {\n          method: 'POST' as any,\n          url: resolveWixHubV1DataMovementServiceUrl({\n            protoPath: '/v1/jobs/list',\n            data: payload,\n            host,\n          }),\n          data: payload,\n        },\n      ],\n    };\n\n    return metadata;\n  }\n\n  return __listJobs;\n}\n\n/** Queries data movement jobs for the current site. */\nexport function queryJobs(payload: object): RequestOptionsFactory<any> {\n  function __queryJobs({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.hub.v1.job',\n      method: 'POST' as any,\n      methodFqn: 'wix.hub.v1.DataMovementService.QueryJobs',\n      packageName: PACKAGE_NAME,\n      url: resolveWixHubV1DataMovementServiceUrl({\n        protoPath: '/v1/jobs/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [{ path: 'jobs.startedAt' }, { path: 'jobs.finishedAt' }],\n          },\n        ]),\n      fallback: [\n        {\n          method: 'POST' as any,\n          url: resolveWixHubV1DataMovementServiceUrl({\n            protoPath: '/v1/jobs/query',\n            data: payload,\n            host,\n          }),\n          data: payload,\n        },\n      ],\n    };\n\n    return metadata;\n  }\n\n  return __queryJobs;\n}\n\n/** Terminates the specified job. */\nexport function terminateJob(payload: object): RequestOptionsFactory<any> {\n  function __terminateJob({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.hub.v1.job',\n      method: 'POST' as any,\n      methodFqn: 'wix.hub.v1.DataMovementService.TerminateJob',\n      packageName: PACKAGE_NAME,\n      url: resolveWixHubV1DataMovementServiceUrl({\n        protoPath: '/v1/jobs/{jobId}/terminate',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [{ path: 'job.startedAt' }, { path: 'job.finishedAt' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __terminateJob;\n}\n\n/**\n * Lists logs for the specified job.\n *\n * Logs are generated by the destination for each item that failed to move. Some destinations also generate logs for items that moved successfully.\n */\nexport function listMovementLogs(payload: object): RequestOptionsFactory<any> {\n  function __listMovementLogs({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.hub.v1.job',\n      method: 'GET' as any,\n      methodFqn: 'wix.hub.v1.DataMovementService.ListMovementLogs',\n      packageName: PACKAGE_NAME,\n      url: resolveWixHubV1DataMovementServiceUrl({\n        protoPath: '/v1/jobs/{jobId}/logs',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __listMovementLogs;\n}\n","import * as ambassadorWixHubV1Job from './hub-v1-job-movement-jobs.http.js';\nimport * as ambassadorWixHubV1JobTypes from './hub-v1-job-movement-jobs.types.js';\nimport * as ambassadorWixHubV1JobUniversalTypes from './hub-v1-job-movement-jobs.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function submitJob(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixHubV1JobUniversalTypes.SubmitJobRequest,\n  ambassadorWixHubV1JobTypes.SubmitJobRequest,\n  ambassadorWixHubV1JobUniversalTypes.SubmitJobResponse,\n  ambassadorWixHubV1JobTypes.SubmitJobResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixHubV1Job.submitJob(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/jobs',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function createFileUploadUrl(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixHubV1JobUniversalTypes.CreateFileUploadUrlRequest,\n  ambassadorWixHubV1JobTypes.CreateFileUploadUrlRequest,\n  ambassadorWixHubV1JobUniversalTypes.CreateFileUploadUrlResponse,\n  ambassadorWixHubV1JobTypes.CreateFileUploadUrlResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixHubV1Job.createFileUploadUrl(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/temporary-files/upload-url',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getJob(): __PublicMethodMetaInfo<\n  'GET',\n  { jobId: string },\n  ambassadorWixHubV1JobUniversalTypes.GetJobRequest,\n  ambassadorWixHubV1JobTypes.GetJobRequest,\n  ambassadorWixHubV1JobUniversalTypes.GetJobResponse,\n  ambassadorWixHubV1JobTypes.GetJobResponse\n> {\n  const payload = { jobId: ':jobId' } as any;\n\n  const getRequestOptions = ambassadorWixHubV1Job.getJob(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/jobs/{jobId}',\n    pathParams: { jobId: 'jobId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function listJobs(): __PublicMethodMetaInfo<\n  'GET',\n  {},\n  ambassadorWixHubV1JobUniversalTypes.ListJobsRequest,\n  ambassadorWixHubV1JobTypes.ListJobsRequest,\n  ambassadorWixHubV1JobUniversalTypes.ListJobsResponse,\n  ambassadorWixHubV1JobTypes.ListJobsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixHubV1Job.listJobs(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/jobs',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function queryJobs(): __PublicMethodMetaInfo<\n  'GET',\n  {},\n  ambassadorWixHubV1JobUniversalTypes.QueryJobsRequest,\n  ambassadorWixHubV1JobTypes.QueryJobsRequest,\n  ambassadorWixHubV1JobUniversalTypes.QueryJobsResponse,\n  ambassadorWixHubV1JobTypes.QueryJobsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions = ambassadorWixHubV1Job.queryJobs(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/jobs/query',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function terminateJob(): __PublicMethodMetaInfo<\n  'POST',\n  { jobId: string },\n  ambassadorWixHubV1JobUniversalTypes.TerminateJobRequest,\n  ambassadorWixHubV1JobTypes.TerminateJobRequest,\n  ambassadorWixHubV1JobUniversalTypes.TerminateJobResponse,\n  ambassadorWixHubV1JobTypes.TerminateJobResponse\n> {\n  const payload = { jobId: ':jobId' } as any;\n\n  const getRequestOptions = ambassadorWixHubV1Job.terminateJob(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/jobs/{jobId}/terminate',\n    pathParams: { jobId: 'jobId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function listMovementLogs(): __PublicMethodMetaInfo<\n  'GET',\n  { jobId: string },\n  ambassadorWixHubV1JobUniversalTypes.ListMovementLogsRequest,\n  ambassadorWixHubV1JobTypes.ListMovementLogsRequest,\n  ambassadorWixHubV1JobUniversalTypes.ListMovementLogsResponse,\n  ambassadorWixHubV1JobTypes.ListMovementLogsResponse\n> {\n  const payload = { jobId: ':jobId' } as any;\n\n  const getRequestOptions = ambassadorWixHubV1Job.listMovementLogs(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v1/jobs/{jobId}/logs',\n    pathParams: { jobId: 'jobId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":"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","names":["payload","submitJob","createFileUploadUrl","getJob","listJobs","queryJobs","terminateJob","listMovementLogs"]}