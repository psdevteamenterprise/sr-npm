export { getContextualAuth } from '@wix/sdk-runtime/context';
export declare function elevate<T>(restModule: T): T;
/**
 * Returns the information encoded in the currently active token in API backend extensions.
 *
 * When developing API backend extensions you might need to access information about the session that is making the request.
 *
 * This can include the user ID, the site ID, the instance ID, and more. This information is encoded in the token that is sent with the request
 * and can be accessed using this function.
 * @returns A promise that resolves to the token info.
 * @example
 * ```ts
 * // In an API backend extension in a Wix CLI project
 * import { auth } from '@wix/essentials';
 *
 * export async function GET(req: Request) {
 *  const tokenInfo = await auth.getTokenInfo();
 *
 *  if (tokenInfo.subjectType === 'USER') {
 *    return new Response(`Hello user ${tokenInfo.subjectId}`);
 *  } else if (tokenInfo.subjectType === 'APP') {
 *    return new Response('Hello app');
 *  } else if (tokenInfo.subjectType === 'MEMBER') {
 *    return new Response(`Hello member ${tokenInfo.subjectId}`);
 *  } else {
 *    return new Response(`Hello visitor ${tokenInfo.subjectId}`);
 *  }
 * }
 * ```
 * @example
 * ```ts
 * // In a Velo web method
 * import { auth } from '@wix/essentials';
 * import { Permissions, webMethod } from 'wix-web-module';
 *
 * export const sayHello = webMethod(Permimissions.Anyone, async () => {
 *  const tokenInfo = await auth.getTokenInfo();
 *
 * if (tokenInfo.subjectType === 'USER') {
 *  return `Hello user ${tokenInfo.subjectId}`;
 * } else if (tokenInfo.subjectType === 'APP') {
 *  return 'Hello app';
 * } else if (tokenInfo.subjectType === 'MEMBER') {
 *  return `Hello member ${tokenInfo.subjectId}`;
 * } else {
 *  return `Hello visitor ${tokenInfo.subjectId}`;
 * }
 */
export declare const getTokenInfo: (() => Promise<{
    active: boolean;
    subjectType: "APP" | "USER" | "MEMBER" | "VISITOR" | "UNKNOWN";
    subjectId: string;
    exp: number;
    iat: number;
    clientId?: string;
    siteId: string;
    instanceId?: string;
}>) & ((restModuleOpts: import("@wix/sdk-types").HttpClient) => () => Promise<{
    active: boolean;
    subjectType: "APP" | "USER" | "MEMBER" | "VISITOR" | "UNKNOWN";
    subjectId: string;
    exp: number;
    iat: number;
    clientId?: string;
    siteId: string;
    instanceId?: string;
}>);
