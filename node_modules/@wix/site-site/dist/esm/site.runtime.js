import { createHostModule } from '@wix/sdk-runtime/host-modules';
export const siteRuntime = createHostModule({
    currency: ({ channel }) => function currency(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'currency',
            args,
        });
    },
    currentPage: ({ channel }) => function currentPage(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'currentPage',
            args,
        });
    },
    language: ({ channel }) => function language(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'language',
            args,
        });
    },
    regionalSettings: ({ channel }) => function regionalSettings(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'regionalSettings',
            args,
        });
    },
    revision: ({ channel }) => function revision(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'revision',
            args,
        });
    },
    timezone: ({ channel }) => function timezone(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'timezone',
            args,
        });
    },
    getFontsHtml: ({ channel }) => function getFontsHtml(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'getFontsHtml',
            args,
        });
    },
    getSiteDisplayName: ({ channel }) => function getSiteDisplayName(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'getSiteDisplayName',
            args,
        });
    },
    getSiteStructure: ({ channel }) => function getSiteStructure(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'getSiteStructure',
            args,
        });
    },
    getSiteThemeHtml: ({ channel }) => function getSiteThemeHtml(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'getSiteThemeHtml',
            args,
        });
    },
    prefetchPageResources: ({ channel }) => function prefetchPageResources(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'prefetchPageResources',
            args,
        });
    },
    routerSitemap: ({ channel }) => function routerSitemap(...args) {
        return channel.invoke({
            namespace: 'site',
            method: 'routerSitemap',
            args,
        });
    },
});
//# sourceMappingURL=site.runtime.js.map