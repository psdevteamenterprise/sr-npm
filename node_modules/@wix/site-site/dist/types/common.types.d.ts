import { WixRouterSitemapEntry } from './wixroutersitemapentry.types';
/**
 * An object that contains information about which pages and lightboxes to
 *  prefetch resources for.
 */
export interface PrefetchItems {
    /**
     * The relative or absolute URLs of the pages in your site
     *  to prefetch resources for.
     */
    pages?: string[];
    /**
     * The names of the lightboxes in your site to prefetch
     *  resources for.
     *
     *  > **Note:** Pages are listed by relative or absolute URL, but lightboxes are listed by name.
     *  See [`location.to()`](location.html#to) to learn how to find a page's relative
     *  URL. You can find a lightbox's name by selecting the lightbox and clicking the settings button.
     */
    lightboxes?: string[];
}
/**
 * An object that is returned from a prefetch request.
 */
export interface PrefetchResult {
    /**
     * A success or failure message.
     * @requiredField message
     */
    message: string;
    /**
     * The errors that occurred.
     * @requiredField errors
     * @servicePath wix-site-frontend.PrefetchResultError
     */
    errors: PrefetchResultError;
}
/**
 * An object that is returned when a resource prefetch is unsuccessful.
 */
export interface PrefetchResultError {
    /**
     * The names of the pages for which prefetch failed.
     * @requiredField pages
     */
    pages: string[];
    /**
     * The names of the lightbox for which prefetch failed.
     * @requiredField lightboxes
     */
    lightboxes: string[];
}
/**
 * An object that contains information about the site's prefixes.
 */
export interface Prefix {
    /**
     * The name of the prefix.
     * @requiredField name
     */
    name: string;
    /**
     * The type of the prefix.
     *
     *  A site's routers, dynamic pages, and app pages all have prefixes.
     *
     *  One of:
     *
     *  + `"dynamicPages"`
     *  + `"router"`
     *  + `"app"`
     * @requiredField type
     */
    type: string;
    /**
     * The prefix.
     * @requiredField prefix
     */
    prefix: string;
    /**
     * If the prefix is an app's prefix, the `applicationId` property is the app's ID.
     */
    applicationId?: string;
}
/**
 * An object that contains information about the site's pages, prefixes, and lightboxes.
 */
export interface SiteStructure {
    /**
     * The pages of the site.
     *  Pages can be regular pages, dynamic pages, router pages, or pages from an app.
     * @requiredField pages
     * @servicePath wix-site-frontend.StructurePage
     */
    pages: StructurePage[];
    /**
     * The prefixes of the site's routers and dynamic pages.
     * @requiredField prefixes
     * @servicePath wix-site-frontend.Prefix
     */
    prefixes: Prefix[];
    /**
     * The site's lightboxes.
     * @requiredField lightboxes
     * @servicePath wix-site-frontend.StructureLightbox
     */
    lightboxes: StructureLightbox[];
}
/**
 * An object that contains information about a lightbox on the site.
 */
export interface StructureLightbox {
    /**
     * The name of the lightbox.
     * @requiredField name
     */
    name: string;
}
/**
 * An object that contains information about a page on the site.
 */
export interface StructurePage {
    /**
     * The name of the page.
     * @requiredField name
     */
    name: string;
    /**
     * The type of the page: `"static"` or `"template"`.
     * @requiredField type
     */
    type: string;
    /**
     * The URL of the page. If the page is a `static` page the `url` property is the page's SEO URL.
     */
    url?: string;
    /**
     * If the page is an app page, the `applicationId` property is the app's ID.
     */
    applicationId?: string;
    /**
     * If the page is a router or dynamic page, the `prefix` property is the page's prefix.
     */
    prefix?: string;
    /**
     * If the page is the Home page, `isHomePage` is `true`. Otherwise, it does not exist.
     */
    isHomePage?: boolean;
}
/**
 * The options used when getting the HTML element.
 */
export interface getFontsHtmlOptions {
    /**
     * An identifier that is added in a `data-test-id` attribute on the returned HTML element. Use this identifier to locate the HTML element when testing your code.
     * @requiredField testId
     */
    testId: string;
}
/**
 * The options used when getting HTML element.
 */
export interface getSiteThemeHtmlOptions {
    /**
     * An identifier that is added in a `data-test-id` attribute on the returned HTML element. You can use this identifier to locate the HTML element when testing your code.
     * @requiredField testId
     */
    testId: string;
}
