// src/data-v2-backup-backups.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixpressDstoreApiBackupV2BackupServiceUrl(opts) {
  const domainToMappings = {
    "www._base_domain_": [
      {
        srcPath: "/_api/data/backups",
        destPath: "/api/v1/backups"
      },
      {
        srcPath: "/_api/data/v2/backups",
        destPath: "/v2/backups"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/data/backups",
        destPath: "/api/v1/backups"
      },
      {
        srcPath: "/_api/data/v2/backups",
        destPath: "/v2/backups"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/data/backups",
        destPath: "/api/v1/backups"
      },
      {
        srcPath: "/_api/data/v2/backups",
        destPath: "/v2/backups"
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/data/backups",
        destPath: "/api/v1/backups"
      },
      {
        srcPath: "/_api/data/v2/backups",
        destPath: "/v2/backups"
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/data/backups",
        destPath: "/api/v1/backups"
      },
      {
        srcPath: "/_api/data/v2/backups",
        destPath: "/v2/backups"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/wix-data/v1/backups",
        destPath: "/api/v1/backups"
      },
      {
        srcPath: "/wix-data/v2/backups",
        destPath: "/v2/backups"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/data/v2/backups",
        destPath: "/v2/backups"
      },
      {
        srcPath: "/_api/data/backups",
        destPath: "/api/v1/backups"
      }
    ],
    _: [
      {
        srcPath: "/data/v2/backups",
        destPath: "/v2/backups"
      },
      {
        srcPath: "/_api/data/backups",
        destPath: "/api/v1/backups"
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_data_backups";
function createBackup(payload) {
  function __createBackup({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.backup",
      method: "POST",
      methodFqn: "com.wixpress.dstore.api.backup.v2.BackupService.CreateBackup",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressDstoreApiBackupV2BackupServiceUrl({
        protoPath: "/v2/backups",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "backup.requestedDate" },
            { path: "backup.startedDate" },
            { path: "backup.finishedDate" },
            { path: "backup.deletedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createBackup;
}
function listBackups(payload) {
  function __listBackups({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.backup",
      method: "GET",
      methodFqn: "com.wixpress.dstore.api.backup.v2.BackupService.ListBackups",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressDstoreApiBackupV2BackupServiceUrl({
        protoPath: "/v2/backups",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "backups.requestedDate" },
            { path: "backups.startedDate" },
            { path: "backups.finishedDate" },
            { path: "backups.deletedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __listBackups;
}
function restoreBackup(payload) {
  function __restoreBackup({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.backup",
      method: "POST",
      methodFqn: "com.wixpress.dstore.api.backup.v2.BackupService.RestoreBackup",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressDstoreApiBackupV2BackupServiceUrl({
        protoPath: "/v2/backups/{backupId}/restore",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "restoration.requestedDate" },
            { path: "restoration.startedDate" },
            { path: "restoration.finishedDate" },
            { path: "restoration.backup.requestedDate" },
            { path: "restoration.backup.startedDate" },
            { path: "restoration.backup.finishedDate" },
            { path: "restoration.backup.deletedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __restoreBackup;
}
function restorePartialBackup(payload) {
  function __restorePartialBackup({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.backup",
      method: "POST",
      methodFqn: "com.wixpress.dstore.api.backup.v2.BackupService.RestorePartialBackup",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressDstoreApiBackupV2BackupServiceUrl({
        protoPath: "/v2/backups/{backupId}/partial-restore",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "restoration.requestedDate" },
            { path: "restoration.startedDate" },
            { path: "restoration.finishedDate" },
            { path: "restoration.backup.requestedDate" },
            { path: "restoration.backup.startedDate" },
            { path: "restoration.backup.finishedDate" },
            { path: "restoration.backup.deletedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __restorePartialBackup;
}
function listRestorations(payload) {
  function __listRestorations({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.backup",
      method: "GET",
      methodFqn: "com.wixpress.dstore.api.backup.v2.BackupService.ListRestorations",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressDstoreApiBackupV2BackupServiceUrl({
        protoPath: "/v2/backups/restorations",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "restorations.requestedDate" },
            { path: "restorations.startedDate" },
            { path: "restorations.finishedDate" },
            { path: "restorations.backup.requestedDate" },
            { path: "restorations.backup.startedDate" },
            { path: "restorations.backup.finishedDate" },
            { path: "restorations.backup.deletedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __listRestorations;
}
function deleteBackup(payload) {
  function __deleteBackup({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v2.backup",
      method: "DELETE",
      methodFqn: "com.wixpress.dstore.api.backup.v2.BackupService.DeleteBackup",
      packageName: PACKAGE_NAME,
      url: resolveComWixpressDstoreApiBackupV2BackupServiceUrl({
        protoPath: "/v2/backups/{backupId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteBackup;
}

// src/data-v2-backup-backups.meta.ts
function createBackup2() {
  const payload = {};
  const getRequestOptions = createBackup(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/backups",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listBackups2() {
  const payload = {};
  const getRequestOptions = listBackups(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v2/backups",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function restoreBackup2() {
  const payload = { backupId: ":backupId" };
  const getRequestOptions = restoreBackup(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/backups/{backupId}/restore",
    pathParams: { backupId: "backupId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function restorePartialBackup2() {
  const payload = { backupId: ":backupId" };
  const getRequestOptions = restorePartialBackup(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/backups/{backupId}/partial-restore",
    pathParams: { backupId: "backupId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listRestorations2() {
  const payload = {};
  const getRequestOptions = listRestorations(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v2/backups/restorations",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteBackup2() {
  const payload = { backupId: ":backupId" };
  const getRequestOptions = deleteBackup(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v2/backups/{backupId}",
    pathParams: { backupId: "backupId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  createBackup2 as createBackup,
  deleteBackup2 as deleteBackup,
  listBackups2 as listBackups,
  listRestorations2 as listRestorations,
  restoreBackup2 as restoreBackup,
  restorePartialBackup2 as restorePartialBackup
};
//# sourceMappingURL=meta.mjs.map