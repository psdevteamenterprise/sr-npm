"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  addSpecialPermissions: () => addSpecialPermissions2,
  getMyPermissions: () => getMyPermissions2,
  getPermissions: () => getPermissions2,
  removeSpecialPermissions: () => removeSpecialPermissions2,
  updatePermissions: () => updatePermissions2,
  updateSpecialPermissions: () => updateSpecialPermissions2
});
module.exports = __toCommonJS(meta_exports);

// src/data-v1-data-permissions-permissions.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixCloudPermissionsV1DataPermissionsServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/_api/cloud-data/v1/permissions",
        destPath: "/v1/permissions"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/cloud-data/v1/permissions",
        destPath: "/v1/permissions"
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/cloud-data/v1/permissions",
        destPath: "/v1/permissions"
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/cloud-data/v1/permissions",
        destPath: "/v1/permissions"
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/wix-data/v1/permissions",
        destPath: "/v1/permissions"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/data/v1/permissions",
        destPath: "/v1/permissions"
      }
    ],
    _: [
      {
        srcPath: "/_api/data/v1/permissions",
        destPath: "/v1/permissions"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_data_permissions";
function getPermissions(payload) {
  function __getPermissions({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v1.data_permissions",
      method: "GET",
      methodFqn: "wix.cloud.permissions.v1.DataPermissionsService.GetPermissions",
      packageName: PACKAGE_NAME,
      url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
        protoPath: "/v1/permissions",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __getPermissions;
}
function updatePermissions(payload) {
  function __updatePermissions({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v1.data_permissions",
      method: "POST",
      methodFqn: "wix.cloud.permissions.v1.DataPermissionsService.UpdatePermissions",
      packageName: PACKAGE_NAME,
      url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
        protoPath: "/v1/permissions",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __updatePermissions;
}
function addSpecialPermissions(payload) {
  function __addSpecialPermissions({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v1.data_permissions",
      method: "POST",
      methodFqn: "wix.cloud.permissions.v1.DataPermissionsService.AddSpecialPermissions",
      packageName: PACKAGE_NAME,
      url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
        protoPath: "/v1/permissions/special",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __addSpecialPermissions;
}
function updateSpecialPermissions(payload) {
  function __updateSpecialPermissions({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v1.data_permissions",
      method: "POST",
      methodFqn: "wix.cloud.permissions.v1.DataPermissionsService.UpdateSpecialPermissions",
      packageName: PACKAGE_NAME,
      url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
        protoPath: "/v1/permissions/special/{specialPermissions.id}",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __updateSpecialPermissions;
}
function removeSpecialPermissions(payload) {
  function __removeSpecialPermissions({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v1.data_permissions",
      method: "DELETE",
      methodFqn: "wix.cloud.permissions.v1.DataPermissionsService.RemoveSpecialPermissions",
      packageName: PACKAGE_NAME,
      url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
        protoPath: "/v1/permissions/special/{specialPermissionsId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __removeSpecialPermissions;
}
function getMyPermissions(payload) {
  function __getMyPermissions({ host }) {
    const metadata = {
      entityFqdn: "wix.data.v1.data_permissions",
      method: "GET",
      methodFqn: "wix.cloud.permissions.v1.DataPermissionsService.GetMyPermissions",
      packageName: PACKAGE_NAME,
      url: resolveWixCloudPermissionsV1DataPermissionsServiceUrl({
        protoPath: "/v1/permissions/current",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __getMyPermissions;
}

// src/data-v1-data-permissions-permissions.meta.ts
function getPermissions2() {
  const payload = {};
  const getRequestOptions = getPermissions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/permissions",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updatePermissions2() {
  const payload = {};
  const getRequestOptions = updatePermissions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/permissions",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function addSpecialPermissions2() {
  const payload = {};
  const getRequestOptions = addSpecialPermissions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/permissions/special",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateSpecialPermissions2() {
  const payload = {
    specialPermissions: { id: ":specialPermissionsId" }
  };
  const getRequestOptions = updateSpecialPermissions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v1/permissions/special/{specialPermissions.id}",
    pathParams: { specialPermissionsId: "specialPermissionsId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function removeSpecialPermissions2() {
  const payload = { specialPermissionsId: ":specialPermissionsId" };
  const getRequestOptions = removeSpecialPermissions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v1/permissions/special/{specialPermissionsId}",
    pathParams: { specialPermissionsId: "specialPermissionsId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getMyPermissions2() {
  const payload = {};
  const getRequestOptions = getMyPermissions(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/permissions/current",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  addSpecialPermissions,
  getMyPermissions,
  getPermissions,
  removeSpecialPermissions,
  updatePermissions,
  updateSpecialPermissions
});
//# sourceMappingURL=meta.js.map