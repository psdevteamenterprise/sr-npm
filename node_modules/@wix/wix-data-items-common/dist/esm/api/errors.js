import { wixDataError } from '../errors';
export function isHttpError(error) {
    return !!error.response?.status;
}
export function parseHookError(error) {
    const data = error.details.applicationError.data;
    const errorData = data?.jsErrorValue || (!data?.value && error.details.applicationError); // fallback to use default hook error message data
    if (errorData) {
        const { name, message, code, description } = errorData;
        const result = new Error(message || description);
        result.name = name || description;
        // @ts-expect-error
        result.code = code;
        return result;
    }
    return data?.value;
}
export function parseValidationError(error) {
    const fieldViolations = error.details?.validationError?.fieldViolations ?? [];
    const violations = fieldViolations.map((v) => `${v.field}: ${v.description}`);
    return wixDataError([error.message, ...violations].join('\n'), undefined, error.details);
}
export function parseError(error) {
    const details = error.details ?? {};
    if (details.applicationError?.code === 'WDE0078') {
        const hookError = parseHookError(error);
        if (hookError) {
            return hookError;
        }
    }
    if (details.applicationError) {
        return wixDataError(details.applicationError.description, undefined, details);
    }
    if (error.details?.validationError) {
        return parseValidationError(error);
    }
    return null;
}
//# sourceMappingURL=errors.js.map