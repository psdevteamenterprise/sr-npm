{"version":3,"names":["_typeUtils","require","_baseValidator","_errors","_filterBuilder","filterMixin","Base","genericFilterMixin","constructor","origin","_defineProperty2","default","validateCollectionName","or","otherQuery","orQuery","apply","arguments","_validateCollectionName","and","andQuery","not","notQuery","query","originalQuery","operationName","invalidArguments","length","withCollectionName","withCollectionNameIfUnset","collectionName","newInvalidArguments","valid","FilterValidator","constructorName","name","isForCollection","validateAndAggregate","_copy","filterTree","_matchesUrlized","field","operand","_filterValidator","arityIsTwo","validFieldName","typeIsString","newFilterTree","_makeNewFilter","createMatchesOrInFilter","getFilterModel","validationError","messages","filterBuilderInvalid","filterOperatorName","looksLikeAnInteger","Number","parseInt","ignoreCase","spec","createMatchSpec","str","test","fieldValue","literals","split","result","i","appendLiteralSegment","appendAnyOfSegment","res","literalValue","push","type","value","AggregatingValidator","operatorName","previousInvalidArguments","ctor","addValidation","isString","filterValidations","typeIsStringNumberOrDate","isDateStringOrNumber","sameType","first","second","typeForDisplay","typeIsStringNumberOrDateForAll","values","every","isInstanceOfSameClass","obj","otherFilterBuilder","expectedCollectionName","exports","isNumber","isDate","filter","_default"],"sources":["../../../src/filter/filterMixin.ts"],"sourcesContent":["import { typeForDisplay, isDate, isString, isNumber } from '../utils/type-utils'\nimport { AggregatingValidator } from '../errors/base-validator'\nimport { messages, validationError } from '../errors/errors'\nimport {\n  filterMixin as genericFilterMixin,\n  Validator,\n} from '@wix/filter-builder'\n\nconst filterMixin = (Base: any = class {}) =>\n  class extends genericFilterMixin(Base) {\n    readonly validateCollectionName: boolean\n\n    constructor(origin?: {\n      validateCollectionName?: boolean\n      filterTree?: object\n      invalidArguments?: string[]\n      encoder?: Function\n    }) {\n      super(origin)\n      this.validateCollectionName = origin?.validateCollectionName ?? true\n    }\n\n    or(otherQuery: any) {\n      const orQuery = super.or.apply(this, arguments as any)\n      return this._validateCollectionName(orQuery, otherQuery, '.or')\n    }\n\n    and(otherQuery: any) {\n      const andQuery = super.and.apply(this, arguments as any)\n      return this._validateCollectionName(andQuery, otherQuery, '.and')\n    }\n\n    not(otherQuery: any) {\n      const notQuery = super.not.apply(this, arguments as any)\n      return this._validateCollectionName(notQuery, otherQuery, '.not')\n    }\n\n    _validateCollectionName(\n      query: any,\n      originalQuery: any,\n      operationName: string\n    ) {\n      if (query.invalidArguments.length > 0 || !this.validateCollectionName) {\n        return query\n      }\n      const withCollectionName = withCollectionNameIfUnset(\n        originalQuery,\n        this.collectionName\n      )\n      const [newInvalidArguments, valid] = new FilterValidator(\n        operationName,\n        query.invalidArguments,\n        this.constructor,\n        this.constructorName ?? this.constructor.name\n      )\n        .isForCollection(withCollectionName, this.collectionName)\n        .validateAndAggregate()\n\n      if (!valid) {\n        return this._copy(this.filterTree, newInvalidArguments)\n      }\n      return query\n    }\n\n    // used only from data binding router internally\n    _matchesUrlized(field: any, operand: any) {\n      const [newInvalidArguments, valid] = this._filterValidator(\n        '._matchesUrlized'\n      )\n        .arityIsTwo(arguments)\n        .validFieldName(field)\n        .typeIsString(operand)\n        .validateAndAggregate()\n\n      if (valid) {\n        const newFilterTree = this._makeNewFilter(\n          field,\n          // @ts-expect-error-next-line\n          ...createMatchesOrInFilter(operand)\n        )\n        return this._copy(newFilterTree, newInvalidArguments)\n      }\n\n      return this._copy(this.filterTree, newInvalidArguments)\n    }\n\n    getFilterModel() {\n      if (this.invalidArguments.length > 0) {\n        throw validationError(\n          messages.filterBuilderInvalid(this.invalidArguments)\n        )\n      }\n      return super.getFilterModel()\n    }\n\n    _filterValidator(filterOperatorName: string): Validator {\n      return new FilterValidator(\n        filterOperatorName,\n        this.invalidArguments,\n        this.constructor,\n        this.constructorName ?? this.constructor.name\n      )\n    }\n  }\n\nfunction createMatchesOrInFilter(operand: string) {\n  if (looksLikeAnInteger(operand)) {\n    // eslint-disable-next-line radix\n    return ['$in', [operand, Number.parseInt(operand)]]\n  } else {\n    return [\n      '$matches',\n      {\n        ignoreCase: true,\n        spec: createMatchSpec(operand),\n      },\n    ]\n  }\n\n  function looksLikeAnInteger(str: string) {\n    return /^-?[0-9]{1,16}$/.test(str)\n  }\n}\ninterface MatchSpec {\n  type: string\n  value: string\n}\n\nfunction createMatchSpec(fieldValue: string) {\n  const literals = fieldValue.split('-')\n  const result: MatchSpec[] = []\n\n  for (let i = 0; i < literals.length - 1; i++) {\n    appendLiteralSegment(result, literals[i])\n    appendAnyOfSegment(result)\n  }\n  appendLiteralSegment(result, literals[literals.length - 1])\n\n  return result\n\n  function appendLiteralSegment(res: MatchSpec[], literalValue: string) {\n    if (literalValue.length !== 0) {\n      res.push({ type: 'literal', value: literalValue })\n    }\n  }\n\n  function appendAnyOfSegment(res: MatchSpec[]) {\n    res.push({ type: 'anyOf', value: ' \\t\\n-' })\n  }\n}\n\nexport class FilterValidator extends AggregatingValidator {\n  constructor(\n    public operatorName: string,\n    previousInvalidArguments: string[],\n    private ctor: any,\n    private constructorName: string\n  ) {\n    super(previousInvalidArguments)\n  }\n\n  typeIsString(value: any) {\n    return this.addValidation(\n      () => isString(value),\n      () => messages.filterValidations.typeIsString(this.operatorName, value)\n    )\n  }\n\n  typeIsStringNumberOrDate(value: any) {\n    return this.addValidation(\n      () => isDateStringOrNumber(value),\n      () =>\n        messages.filterValidations.typeIsStringNumberOrDate(\n          this.operatorName,\n          value\n        )\n    )\n  }\n\n  sameType(first: any, second: any) {\n    return this.addValidation(\n      () => typeForDisplay(first) === typeForDisplay(second),\n      () =>\n        messages.filterValidations.sameType(this.operatorName, first, second)\n    )\n  }\n\n  typeIsStringNumberOrDateForAll(values: any) {\n    return this.addValidation(\n      () => values.every(isDateStringOrNumber),\n      () =>\n        messages.filterValidations.typeIsStringNumberOrDateForAll(\n          this.operatorName\n        )\n    )\n  }\n\n  validFieldName(field: any) {\n    return this.addValidation(\n      () => isString(field),\n      () => messages.filterValidations.validFieldName(this.operatorName, field)\n    )\n  }\n\n  isInstanceOfSameClass(obj: any) {\n    return this.addValidation(\n      () => obj instanceof this.ctor,\n      () =>\n        messages.filterValidations.isInstanceOfSameClass(\n          this.operatorName,\n          this.constructorName,\n          obj\n        )\n    )\n  }\n\n  isForCollection(otherFilterBuilder: any, expectedCollectionName: any) {\n    return this.addValidation(\n      () => otherFilterBuilder.collectionName === expectedCollectionName,\n      () =>\n        messages.filterValidations.isForCollection(\n          this.operatorName,\n          this.constructorName,\n          otherFilterBuilder.collectionName\n        )\n    )\n  }\n}\n\nfunction isDateStringOrNumber(value: any) {\n  return isString(value) || isNumber(value) || isDate(value)\n}\n\nfunction withCollectionNameIfUnset(filter: any, name: string) {\n  if (!filter || !filter.constructor) {\n    return filter\n  }\n\n  const collectionName = filter.collectionName ? filter.collectionName : name\n\n  return new filter.constructor({ ...filter, collectionName })\n}\n\nexport default filterMixin\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,cAAA,GAAAH,OAAA;AAKA,MAAMI,WAAW,GAAGA,CAACC,IAAS,GAAG,MAAM,EAAE,KACvC,cAAc,IAAAC,0BAAkB,EAACD,IAAI,CAAC,CAAC;EAGrCE,WAAWA,CAACC,MAKX,EAAE;IACD,KAAK,CAACA,MAAM,CAAC;IAAA,IAAAC,gBAAA,CAAAC,OAAA;IACb,IAAI,CAACC,sBAAsB,GAAG,CAAAH,MAAM,oBAANA,MAAM,CAAEG,sBAAsB,KAAI,IAAI;EACtE;EAEAC,EAAEA,CAACC,UAAe,EAAE;IAClB,MAAMC,OAAO,GAAG,KAAK,CAACF,EAAE,CAACG,KAAK,CAAC,IAAI,EAAEC,SAAgB,CAAC;IACtD,OAAO,IAAI,CAACC,uBAAuB,CAACH,OAAO,EAAED,UAAU,EAAE,KAAK,CAAC;EACjE;EAEAK,GAAGA,CAACL,UAAe,EAAE;IACnB,MAAMM,QAAQ,GAAG,KAAK,CAACD,GAAG,CAACH,KAAK,CAAC,IAAI,EAAEC,SAAgB,CAAC;IACxD,OAAO,IAAI,CAACC,uBAAuB,CAACE,QAAQ,EAAEN,UAAU,EAAE,MAAM,CAAC;EACnE;EAEAO,GAAGA,CAACP,UAAe,EAAE;IACnB,MAAMQ,QAAQ,GAAG,KAAK,CAACD,GAAG,CAACL,KAAK,CAAC,IAAI,EAAEC,SAAgB,CAAC;IACxD,OAAO,IAAI,CAACC,uBAAuB,CAACI,QAAQ,EAAER,UAAU,EAAE,MAAM,CAAC;EACnE;EAEAI,uBAAuBA,CACrBK,KAAU,EACVC,aAAkB,EAClBC,aAAqB,EACrB;IACA,IAAIF,KAAK,CAACG,gBAAgB,CAACC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAACf,sBAAsB,EAAE;MACrE,OAAOW,KAAK;IACd;IACA,MAAMK,kBAAkB,GAAGC,yBAAyB,CAClDL,aAAa,EACb,IAAI,CAACM,cACP,CAAC;IACD,MAAM,CAACC,mBAAmB,EAAEC,KAAK,CAAC,GAAG,IAAIC,eAAe,CACtDR,aAAa,EACbF,KAAK,CAACG,gBAAgB,EACtB,IAAI,CAAClB,WAAW,EAChB,IAAI,CAAC0B,eAAe,IAAI,IAAI,CAAC1B,WAAW,CAAC2B,IAC3C,CAAC,CACEC,eAAe,CAACR,kBAAkB,EAAE,IAAI,CAACE,cAAc,CAAC,CACxDO,oBAAoB,CAAC,CAAC;IAEzB,IAAI,CAACL,KAAK,EAAE;MACV,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAACC,UAAU,EAAER,mBAAmB,CAAC;IACzD;IACA,OAAOR,KAAK;EACd;;EAEA;EACAiB,eAAeA,CAACC,KAAU,EAAEC,OAAY,EAAE;IACxC,MAAM,CAACX,mBAAmB,EAAEC,KAAK,CAAC,GAAG,IAAI,CAACW,gBAAgB,CACxD,kBACF,CAAC,CACEC,UAAU,CAAC3B,SAAS,CAAC,CACrB4B,cAAc,CAACJ,KAAK,CAAC,CACrBK,YAAY,CAACJ,OAAO,CAAC,CACrBL,oBAAoB,CAAC,CAAC;IAEzB,IAAIL,KAAK,EAAE;MACT,MAAMe,aAAa,GAAG,IAAI,CAACC,cAAc,CACvCP,KAAK;MACL;MACA,GAAGQ,uBAAuB,CAACP,OAAO,CACpC,CAAC;MACD,OAAO,IAAI,CAACJ,KAAK,CAACS,aAAa,EAAEhB,mBAAmB,CAAC;IACvD;IAEA,OAAO,IAAI,CAACO,KAAK,CAAC,IAAI,CAACC,UAAU,EAAER,mBAAmB,CAAC;EACzD;EAEAmB,cAAcA,CAAA,EAAG;IACf,IAAI,IAAI,CAACxB,gBAAgB,CAACC,MAAM,GAAG,CAAC,EAAE;MACpC,MAAM,IAAAwB,uBAAe,EACnBC,gBAAQ,CAACC,oBAAoB,CAAC,IAAI,CAAC3B,gBAAgB,CACrD,CAAC;IACH;IACA,OAAO,KAAK,CAACwB,cAAc,CAAC,CAAC;EAC/B;EAEAP,gBAAgBA,CAACW,kBAA0B,EAAa;IACtD,OAAO,IAAIrB,eAAe,CACxBqB,kBAAkB,EAClB,IAAI,CAAC5B,gBAAgB,EACrB,IAAI,CAAClB,WAAW,EAChB,IAAI,CAAC0B,eAAe,IAAI,IAAI,CAAC1B,WAAW,CAAC2B,IAC3C,CAAC;EACH;AACF,CAAC;AAEH,SAASc,uBAAuBA,CAACP,OAAe,EAAE;EAChD,IAAIa,kBAAkB,CAACb,OAAO,CAAC,EAAE;IAC/B;IACA,OAAO,CAAC,KAAK,EAAE,CAACA,OAAO,EAAEc,MAAM,CAACC,QAAQ,CAACf,OAAO,CAAC,CAAC,CAAC;EACrD,CAAC,MAAM;IACL,OAAO,CACL,UAAU,EACV;MACEgB,UAAU,EAAE,IAAI;MAChBC,IAAI,EAAEC,eAAe,CAAClB,OAAO;IAC/B,CAAC,CACF;EACH;EAEA,SAASa,kBAAkBA,CAACM,GAAW,EAAE;IACvC,OAAO,iBAAiB,CAACC,IAAI,CAACD,GAAG,CAAC;EACpC;AACF;AAMA,SAASD,eAAeA,CAACG,UAAkB,EAAE;EAC3C,MAAMC,QAAQ,GAAGD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC;EACtC,MAAMC,MAAmB,GAAG,EAAE;EAE9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACrC,MAAM,GAAG,CAAC,EAAEwC,CAAC,EAAE,EAAE;IAC5CC,oBAAoB,CAACF,MAAM,EAAEF,QAAQ,CAACG,CAAC,CAAC,CAAC;IACzCE,kBAAkB,CAACH,MAAM,CAAC;EAC5B;EACAE,oBAAoB,CAACF,MAAM,EAAEF,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC;EAE3D,OAAOuC,MAAM;EAEb,SAASE,oBAAoBA,CAACE,GAAgB,EAAEC,YAAoB,EAAE;IACpE,IAAIA,YAAY,CAAC5C,MAAM,KAAK,CAAC,EAAE;MAC7B2C,GAAG,CAACE,IAAI,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAEH;MAAa,CAAC,CAAC;IACpD;EACF;EAEA,SAASF,kBAAkBA,CAACC,GAAgB,EAAE;IAC5CA,GAAG,CAACE,IAAI,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;EAC9C;AACF;AAEO,MAAMzC,eAAe,SAAS0C,mCAAoB,CAAC;EACxDnE,WAAWA,CACFoE,YAAoB,EAC3BC,wBAAkC,EAC1BC,IAAS,EACT5C,eAAuB,EAC/B;IACA,KAAK,CAAC2C,wBAAwB,CAAC;IAAA,KALxBD,YAAoB,GAApBA,YAAoB;IAAA,KAEnBE,IAAS,GAATA,IAAS;IAAA,KACT5C,eAAuB,GAAvBA,eAAuB;EAGjC;EAEAY,YAAYA,CAAC4B,KAAU,EAAE;IACvB,OAAO,IAAI,CAACK,aAAa,CACvB,MAAM,IAAAC,mBAAQ,EAACN,KAAK,CAAC,EACrB,MAAMtB,gBAAQ,CAAC6B,iBAAiB,CAACnC,YAAY,CAAC,IAAI,CAAC8B,YAAY,EAAEF,KAAK,CACxE,CAAC;EACH;EAEAQ,wBAAwBA,CAACR,KAAU,EAAE;IACnC,OAAO,IAAI,CAACK,aAAa,CACvB,MAAMI,oBAAoB,CAACT,KAAK,CAAC,EACjC,MACEtB,gBAAQ,CAAC6B,iBAAiB,CAACC,wBAAwB,CACjD,IAAI,CAACN,YAAY,EACjBF,KACF,CACJ,CAAC;EACH;EAEAU,QAAQA,CAACC,KAAU,EAAEC,MAAW,EAAE;IAChC,OAAO,IAAI,CAACP,aAAa,CACvB,MAAM,IAAAQ,yBAAc,EAACF,KAAK,CAAC,KAAK,IAAAE,yBAAc,EAACD,MAAM,CAAC,EACtD,MACElC,gBAAQ,CAAC6B,iBAAiB,CAACG,QAAQ,CAAC,IAAI,CAACR,YAAY,EAAES,KAAK,EAAEC,MAAM,CACxE,CAAC;EACH;EAEAE,8BAA8BA,CAACC,MAAW,EAAE;IAC1C,OAAO,IAAI,CAACV,aAAa,CACvB,MAAMU,MAAM,CAACC,KAAK,CAACP,oBAAoB,CAAC,EACxC,MACE/B,gBAAQ,CAAC6B,iBAAiB,CAACO,8BAA8B,CACvD,IAAI,CAACZ,YACP,CACJ,CAAC;EACH;EAEA/B,cAAcA,CAACJ,KAAU,EAAE;IACzB,OAAO,IAAI,CAACsC,aAAa,CACvB,MAAM,IAAAC,mBAAQ,EAACvC,KAAK,CAAC,EACrB,MAAMW,gBAAQ,CAAC6B,iBAAiB,CAACpC,cAAc,CAAC,IAAI,CAAC+B,YAAY,EAAEnC,KAAK,CAC1E,CAAC;EACH;EAEAkD,qBAAqBA,CAACC,GAAQ,EAAE;IAC9B,OAAO,IAAI,CAACb,aAAa,CACvB,MAAMa,GAAG,YAAY,IAAI,CAACd,IAAI,EAC9B,MACE1B,gBAAQ,CAAC6B,iBAAiB,CAACU,qBAAqB,CAC9C,IAAI,CAACf,YAAY,EACjB,IAAI,CAAC1C,eAAe,EACpB0D,GACF,CACJ,CAAC;EACH;EAEAxD,eAAeA,CAACyD,kBAAuB,EAAEC,sBAA2B,EAAE;IACpE,OAAO,IAAI,CAACf,aAAa,CACvB,MAAMc,kBAAkB,CAAC/D,cAAc,KAAKgE,sBAAsB,EAClE,MACE1C,gBAAQ,CAAC6B,iBAAiB,CAAC7C,eAAe,CACxC,IAAI,CAACwC,YAAY,EACjB,IAAI,CAAC1C,eAAe,EACpB2D,kBAAkB,CAAC/D,cACrB,CACJ,CAAC;EACH;AACF;AAACiE,OAAA,CAAA9D,eAAA,GAAAA,eAAA;AAED,SAASkD,oBAAoBA,CAACT,KAAU,EAAE;EACxC,OAAO,IAAAM,mBAAQ,EAACN,KAAK,CAAC,IAAI,IAAAsB,mBAAQ,EAACtB,KAAK,CAAC,IAAI,IAAAuB,iBAAM,EAACvB,KAAK,CAAC;AAC5D;AAEA,SAAS7C,yBAAyBA,CAACqE,MAAW,EAAE/D,IAAY,EAAE;EAC5D,IAAI,CAAC+D,MAAM,IAAI,CAACA,MAAM,CAAC1F,WAAW,EAAE;IAClC,OAAO0F,MAAM;EACf;EAEA,MAAMpE,cAAc,GAAGoE,MAAM,CAACpE,cAAc,GAAGoE,MAAM,CAACpE,cAAc,GAAGK,IAAI;EAE3E,OAAO,IAAI+D,MAAM,CAAC1F,WAAW,CAAC;IAAE,GAAG0F,MAAM;IAAEpE;EAAe,CAAC,CAAC;AAC9D;AAAC,IAAAqE,QAAA,GAAAJ,OAAA,CAAApF,OAAA,GAEcN,WAAW","ignoreList":[]}