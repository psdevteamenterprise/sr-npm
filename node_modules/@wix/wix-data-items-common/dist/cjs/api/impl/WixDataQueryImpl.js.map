{"version":3,"names":["_QueryValidator","require","_QueryBase","WixDataQueryImpl","QueryBase","constructor","origin","_defineProperty2","default","projectedFields","limitNumber","skipNumber","included","onFind","onDistinct","onCount","ownInvalidArguments","invalidArguments","copy","params","filterBuilder","sort","count","options","arguments","toQueryParams","distinct","field","find","filterTree","build","_error","collectionName","orderBy","fields","limit","queryValidator","arityIsOne","isPositiveNumber","isInteger","validateAndAggregate","skip","isNonNegativeNumber","include","args","length","last","undefined","expectedFieldNameCount","newIncludes","slice","map","fieldName","reduce","validator","value","_","__","nonEmptyString","operatorName","QueryValidator","exports"],"sources":["../../../../src/api/impl/WixDataQueryImpl.ts"],"sourcesContent":["import { PlatformizedFilterBuilder } from '../../filter'\nimport { ReferencedItemOptions } from '../../types'\nimport { Sort } from '../../sort/sortMixin'\nimport { WixDataResult } from '../WixDataResult'\nimport { WixDataQueryOptions, WixDataReadOptions } from '../types'\nimport { QueryValidator } from '../QueryValidator'\nimport { QueryBase } from '../QueryBase'\nimport { WixDataQuery } from '../WixDataQuery'\n\ntype OnFind = (\n  args: IArguments,\n  params: QueryParams,\n  options?: WixDataQueryOptions\n) => Promise<WixDataResult>\n\ntype OnDistinct = (\n  args: IArguments,\n  params: QueryParams,\n  field: string,\n  options?: WixDataQueryOptions\n) => Promise<WixDataResult<any>>\n\ntype OnCount = (\n  args: IArguments,\n  params: QueryParams,\n  options?: WixDataReadOptions\n) => Promise<number>\n\nexport type QueryParams = {\n  collectionName: string\n  invalidArguments: string[]\n  filterTree?: Record<string, any>\n  projectedFields: string[]\n  limitNumber?: number\n  skipNumber: number\n  included: ReferencedItemOptions[]\n  orderBy: { [field: string]: 'asc' | 'desc' }[]\n}\n\nexport class WixDataQueryImpl\n  extends QueryBase<WixDataQueryImpl>\n  implements WixDataQuery\n{\n  readonly projectedFields: string[]\n\n  readonly limitNumber?: number\n\n  readonly skipNumber: number\n\n  readonly included: ReferencedItemOptions[]\n\n  private readonly onFind: OnFind\n  private readonly onDistinct: OnDistinct\n  private readonly onCount: OnCount\n\n  private readonly ownInvalidArguments: string[]\n\n  constructor(origin: {\n    collectionName: string\n    filterBuilder?: PlatformizedFilterBuilder\n    invalidArguments?: string[]\n    projectedFields?: string[]\n    limitNumber?: number\n    skipNumber?: number\n    included?: ReferencedItemOptions[]\n    sort?: Sort\n    onFind: OnFind\n    onDistinct: OnDistinct\n    onCount: OnCount\n  }) {\n    super(origin)\n    this.projectedFields = origin?.projectedFields ?? []\n    this.limitNumber = origin?.limitNumber\n    this.skipNumber = origin?.skipNumber ?? 0\n    this.included = origin?.included ?? []\n    this.onFind = origin.onFind\n    this.onDistinct = origin.onDistinct\n    this.onCount = origin.onCount\n    this.ownInvalidArguments = origin.invalidArguments ?? []\n  }\n\n  protected override copy(params: {\n    filterBuilder?: PlatformizedFilterBuilder\n    projectedFields?: string[]\n    limitNumber?: number\n    skipNumber?: number\n    included?: ReferencedItemOptions[]\n    sort?: Sort\n    invalidArguments?: string[]\n  }): WixDataQueryImpl {\n    return new WixDataQueryImpl({\n      ...this,\n      filterBuilder: params.filterBuilder ?? this.filterBuilder,\n      projectedFields: params.projectedFields ?? this.projectedFields,\n      limitNumber: params.limitNumber ?? this.limitNumber,\n      skipNumber: params.skipNumber ?? this.skipNumber,\n      included: params.included ?? this.included,\n      sort: params.sort ?? this.sort,\n      invalidArguments: params.invalidArguments ?? this.ownInvalidArguments,\n      onFind: this.onFind,\n      onDistinct: this.onDistinct,\n      onCount: this.onCount,\n    })\n  }\n\n  count(options?: WixDataReadOptions): Promise<number> {\n    return this.onCount(arguments, this.toQueryParams(), options)\n  }\n\n  distinct(\n    field: string,\n    options?: WixDataQueryOptions\n  ): Promise<WixDataResult<any>> {\n    return this.onDistinct(arguments, this.toQueryParams(), field, options)\n  }\n\n  find(options?: WixDataQueryOptions): Promise<WixDataResult> {\n    return this.onFind(arguments, this.toQueryParams(), options)\n  }\n\n  get invalidArguments(): string[] {\n    return [\n      ...this.ownInvalidArguments,\n      ...this.filterBuilder.invalidArguments,\n      ...this.sort.invalidArguments,\n    ]\n  }\n\n  private toQueryParams(): QueryParams {\n    let filterTree\n    try {\n      // optimized filter if no errors\n      filterTree = this.filterBuilder.build()\n    } catch (_error: unknown) {\n      filterTree = this.filterBuilder.filterTree\n    }\n    return {\n      collectionName: this.collectionName,\n      invalidArguments: this.invalidArguments,\n      projectedFields: this.projectedFields,\n      limitNumber: this.limitNumber,\n      skipNumber: this.skipNumber,\n      included: this.included,\n      filterTree,\n      orderBy: this.orderBy,\n    }\n  }\n\n  fields(...fields: string[]): WixDataQuery {\n    return this.copy({\n      projectedFields: [...this.projectedFields, ...fields],\n    })\n  }\n\n  limit(limitNumber: number) {\n    const [invalidArguments] = this.queryValidator('.limit')\n      .arityIsOne(arguments)\n      .isPositiveNumber(limitNumber)\n      .isInteger(limitNumber)\n      .validateAndAggregate()\n    return this.copy({\n      invalidArguments,\n      limitNumber,\n    })\n  }\n\n  skip(skipNumber: number) {\n    const [invalidArguments] = this.queryValidator('.skip')\n      .arityIsOne(arguments)\n      .isNonNegativeNumber(skipNumber)\n      .isInteger(skipNumber)\n      .validateAndAggregate()\n    return this.copy({\n      invalidArguments,\n      skipNumber,\n    })\n  }\n\n  include(...fieldNames: string[]): WixDataQuery\n\n  include(fieldName: string, limit?: number): WixDataQuery\n\n  include(fieldName1: string, fieldName2: string, limit?: number): WixDataQuery\n\n  include(\n    fieldName1: string,\n    fieldName2: string,\n    fieldName3: string,\n    limit?: number\n  ): WixDataQuery\n\n  include(\n    fieldName1: string,\n    fieldName2: string,\n    fieldName3: string,\n    fieldName4: string,\n    limit?: number\n  ): WixDataQuery\n\n  include(\n    fieldName1: string,\n    fieldName2: string,\n    fieldName3: string,\n    fieldName4: string,\n    fieldName5: string,\n    limit?: number\n  ): WixDataQuery\n\n  include(...fieldNamesAndLimit: [...string[], number]): WixDataQuery\n\n  include(...args: unknown[]): WixDataQuery {\n    if (args.length === 0) {\n      return this\n    }\n\n    const last = args[args.length - 1]\n    const limit: number | undefined =\n      typeof last === 'number' ? last : undefined\n\n    const expectedFieldNameCount =\n      limit === undefined ? args.length : args.length - 1\n\n    const newIncludes = args\n      .slice(0, expectedFieldNameCount)\n      .map((fieldName) => ({\n        fieldName: fieldName as string,\n        limit,\n      }))\n\n    const [invalidArguments] = args\n      .slice(0, expectedFieldNameCount)\n      .reduce<QueryValidator>(\n        (validator: QueryValidator, value: unknown, _, __) =>\n          validator.nonEmptyString(value),\n        this.queryValidator('.include')\n      )\n      .validateAndAggregate()\n\n    return this.copy({\n      invalidArguments,\n      included: [...this.included, ...newIncludes],\n    })\n  }\n\n  private queryValidator(\n    operatorName: string,\n    invalidArguments = this.ownInvalidArguments\n  ) {\n    return new QueryValidator(operatorName, invalidArguments)\n  }\n}\n"],"mappings":"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","ignoreList":[]}