{"version":3,"names":["_errors","require","isHttpError","error","_response","response","status","parseHookError","data","details","applicationError","errorData","jsErrorValue","value","name","message","code","description","result","Error","parseValidationError","_error$details","fieldViolations","validationError","violations","map","v","field","wixDataError","join","undefined","parseError","_details$applicationE","_error$details2","hookError"],"sources":["../../../src/api/errors.ts"],"sourcesContent":["import * as apiError from '../types/error'\nimport { wixDataError } from '../errors'\n\nexport function isHttpError(\n  error: unknown\n): error is { response: { status: number; data: any } } {\n  return !!(error as any).response?.status\n}\n\nexport function parseHookError(error: any) {\n  const data = error.details.applicationError.data\n  const errorData =\n    data?.jsErrorValue || (!data?.value && error.details.applicationError) // fallback to use default hook error message data\n  if (errorData) {\n    const { name, message, code, description } = errorData\n    const result = new Error(message || description)\n    result.name = name || description\n    // @ts-expect-error\n    result.code = code\n    return result\n  }\n  return data?.value\n}\n\nexport function parseValidationError(error: apiError.ServerError) {\n  const fieldViolations = error.details?.validationError?.fieldViolations ?? []\n  const violations = fieldViolations.map((v) => `${v.field}: ${v.description}`)\n\n  return wixDataError(\n    [error.message, ...violations].join('\\n'),\n    undefined,\n    error.details\n  )\n}\n\nexport function parseError(error: apiError.ServerError): Error | null {\n  const details = error.details ?? {}\n  if (details.applicationError?.code === 'WDE0078') {\n    const hookError = parseHookError(error)\n    if (hookError) {\n      return hookError\n    }\n  }\n  if (details.applicationError) {\n    return wixDataError(\n      details.applicationError.description!,\n      undefined,\n      details\n    )\n  }\n  if (error.details?.validationError) {\n    return parseValidationError(error)\n  }\n  return null\n}\n"],"mappings":";;;;;;;AACA,IAAAA,OAAA,GAAAC,OAAA;AAEO,SAASC,WAAWA,CACzBC,KAAc,EACwC;EAAA,IAAAC,SAAA;EACtD,OAAO,CAAC,GAAAA,SAAA,GAAED,KAAK,CAASE,QAAQ,aAAvBD,SAAA,CAAyBE,MAAM;AAC1C;AAEO,SAASC,cAAcA,CAACJ,KAAU,EAAE;EACzC,MAAMK,IAAI,GAAGL,KAAK,CAACM,OAAO,CAACC,gBAAgB,CAACF,IAAI;EAChD,MAAMG,SAAS,GACb,CAAAH,IAAI,oBAAJA,IAAI,CAAEI,YAAY,KAAK,EAACJ,IAAI,YAAJA,IAAI,CAAEK,KAAK,KAAIV,KAAK,CAACM,OAAO,CAACC,gBAAiB,EAAC;EACzE,IAAIC,SAAS,EAAE;IACb,MAAM;MAAEG,IAAI;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAAY,CAAC,GAAGN,SAAS;IACtD,MAAMO,MAAM,GAAG,IAAIC,KAAK,CAACJ,OAAO,IAAIE,WAAW,CAAC;IAChDC,MAAM,CAACJ,IAAI,GAAGA,IAAI,IAAIG,WAAW;IACjC;IACAC,MAAM,CAACF,IAAI,GAAGA,IAAI;IAClB,OAAOE,MAAM;EACf;EACA,OAAOV,IAAI,oBAAJA,IAAI,CAAEK,KAAK;AACpB;AAEO,SAASO,oBAAoBA,CAACjB,KAA2B,EAAE;EAAA,IAAAkB,cAAA;EAChE,MAAMC,eAAe,GAAG,EAAAD,cAAA,GAAAlB,KAAK,CAACM,OAAO,cAAAY,cAAA,GAAbA,cAAA,CAAeE,eAAe,qBAA9BF,cAAA,CAAgCC,eAAe,KAAI,EAAE;EAC7E,MAAME,UAAU,GAAGF,eAAe,CAACG,GAAG,CAAEC,CAAC,IAAK,GAAGA,CAAC,CAACC,KAAK,KAAKD,CAAC,CAACT,WAAW,EAAE,CAAC;EAE7E,OAAO,IAAAW,oBAAY,EACjB,CAACzB,KAAK,CAACY,OAAO,EAAE,GAAGS,UAAU,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC,EACzCC,SAAS,EACT3B,KAAK,CAACM,OACR,CAAC;AACH;AAEO,SAASsB,UAAUA,CAAC5B,KAA2B,EAAgB;EAAA,IAAA6B,qBAAA,EAAAC,eAAA;EACpE,MAAMxB,OAAO,GAAGN,KAAK,CAACM,OAAO,IAAI,CAAC,CAAC;EACnC,IAAI,EAAAuB,qBAAA,GAAAvB,OAAO,CAACC,gBAAgB,qBAAxBsB,qBAAA,CAA0BhB,IAAI,MAAK,SAAS,EAAE;IAChD,MAAMkB,SAAS,GAAG3B,cAAc,CAACJ,KAAK,CAAC;IACvC,IAAI+B,SAAS,EAAE;MACb,OAAOA,SAAS;IAClB;EACF;EACA,IAAIzB,OAAO,CAACC,gBAAgB,EAAE;IAC5B,OAAO,IAAAkB,oBAAY,EACjBnB,OAAO,CAACC,gBAAgB,CAACO,WAAW,EACpCa,SAAS,EACTrB,OACF,CAAC;EACH;EACA,KAAAwB,eAAA,GAAI9B,KAAK,CAACM,OAAO,aAAbwB,eAAA,CAAeV,eAAe,EAAE;IAClC,OAAOH,oBAAoB,CAACjB,KAAK,CAAC;EACpC;EACA,OAAO,IAAI;AACb","ignoreList":[]}