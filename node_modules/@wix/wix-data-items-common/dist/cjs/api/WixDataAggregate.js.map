{"version":3,"names":[],"sources":["../../../src/api/WixDataAggregate.ts"],"sourcesContent":["import { WixDataFilter } from './WixDataFilter'\nimport { WixDataAggregateOptions } from './types'\nimport { WixDataResult } from './WixDataResult'\n\n/**\n * @builder\n */\nexport interface WixDataAggregate {\n  /**\n   * Refines a `WixDataAggregate` to contain the sum from each aggregation group.\n   *\n   * The `sum()` method refines a `WixDataAggregate` to contain the sum of the\n   * values from the specified field for each aggregated group or from the\n   * whole collection if no group is defined.\n   *\n   * When the aggregation is `run()`, the returned `WixDataAggregateResult`\n   * object contains an item for each group with the following key:value pairs:\n   * - If a value was passed for the optional `projectedField`, the key is named\n   *   using that value. Otherwise, the key is named using the following format:\n   *   `\"fieldSum\"`, where `field` is the name of the specified field.\n   * - The value is the sum of the values found in the specified field.\n   *\n   * Sums can only be calculated on fields of type Number.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be\n   * > used on [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * @public\n   * @documentationMaturity preview\n   * @param field - Field in which to find the sum.\n   * @requiredField field\n   * @param projectedField - Name of the field in the aggregation results containing the sum.\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  sum(field: string, projectedField?: string): WixDataAggregate\n\n  /**\n   * Refines a `WixDataAggregate` to only contain the average value from each aggregation group.\n   *\n   * The `avg()` method refines a `WixDataAggregate` to contain the average\n   * value from the specified field for each aggregated group or from the\n   * whole collection if no group is defined.\n   *\n   * When the aggregation is `run()`, the returned `WixDataAggregateResult`\n   * object contains an item for each group with the following key:value pairs:\n   * - If a value was passed for the optional `projectedField`, the key is named\n   *   using that value. Otherwise, the key is named using the following format:\n   *   `\"fieldAvg\"`, where `field` is the name of the specified field.\n   * - The value is the average of the values found in the specified field.\n   *\n   *  Averages can only be calculated on fields of type Number.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be\n   * > used on [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * @public\n   * @documentationMaturity preview\n   * @param field - Field in which to find the average value.\n   * @requiredField field\n   * @param projectedField - Field in the aggregation results containing the average value.\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  avg(field: string, projectedField?: string): WixDataAggregate\n\n  /**\n   * Refines a `WixDataAggregate` to only contain the minimum value from each aggregation group.\n   *\n   * The `min()` method refines a `WixDataAggregate` to contain the minimum\n   * value from the specified field for each aggregated group or from the\n   * whole collection if no group is defined.\n   *\n   * When the aggregation is `run()`, the returned `WixDataAggregateResult`\n   * object contains an item for each group with the following key:value pairs:\n   * - If a value was passed for the optional `projectedField`, the key is named\n   *   using that value. Otherwise, the key is named using the following format:\n   *   `\"fieldMin\"`, where `field` is the name of the specified field.\n   * - The value is the minimum value found in the specified field.\n   *\n   * The following types of fields can be compared to determine a minimum value:\n   * - Number: Compares numerically.\n   * - Date and Time: Compares JavaScript Date objects.\n   * - Text: Compares lexicographically, so `\"text\"` is greater than `\"Text\"`.\n   * - Rich Text: Compares HTML source as text.\n   * - URL: Compares as text.\n   * - Image: Compares image source as text.\n   * - Video: Compares video source as text.\n   * - Document: Compares document source as text.\n   * - Reference: Compares by the ID of the referenced item as a String.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be\n   * > used on [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * @public\n   * @documentationMaturity preview\n   * @param field - Field in which to find the minimum value.\n   * @requiredField field\n   * @param projectedField - Name of the field in the aggregation results containing the minimum value.\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  min(field: string, projectedField?: string): WixDataAggregate\n\n  /**\n   * Refines a `WixDataAggregate` to only contain the maximum value from each aggregation group.\n   *\n   * The `max()` method refines a `WixDataAggregate` to contain the maximum\n   * value from the specified field for each aggregated group or from the\n   * whole collection if no group is defined.\n   *\n   * When the aggregation is `run()`, the returned `WixDataAggregateResult`\n   * object contains an item for each group with the following key:value pairs:\n   * - If a value was passed for the optional `projectedField`, the key is named\n   *   using that value. Otherwise, the key is named using the following format:\n   *   `\"fieldMax\"`, where `field` is the name of the specified field.\n   * - The value is the maximum value found in the specified field.\n   *\n   * The following types of fields can be compared to determine a maximum value:\n   * - Number: Compares numerically.\n   * - Date and Time: Compares JavaScript Date objects.\n   * - Text: Compares lexicographically, so `\"text\"` is greater than `\"Text\"`.\n   * - Rich Text: Compares HTML source as text.\n   * - URL: Compares as text.\n   * - Image: Compares image source as text.\n   * - Video: Compares video source as text.\n   * - Document: Compares document source as text.\n   * - Reference: Compares by the ID of the referenced item as a String.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be\n   * > used on [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * @public\n   * @documentationMaturity preview\n   * @param field - Field in which to find the maximum value.\n   * @requiredField field\n   * @param projectedField - Field in the aggregation results that contains the maximum value.\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  max(field: string, projectedField?: string): WixDataAggregate\n\n  /**\n   * Refines a `WixDataAggregate` to contain the item count of each group in the aggregation.\n   *\n   * The `count()` method refines a `WixDataAggregate` contains the item count in each of the aggregate's groups.\n   *\n   * When the aggregation is `run()`, the returned `WixDataAggregateResult`\n   * object contains items with the following additional key:value pair:\n   * - The key is named `count`. You can set a custom key using the `projectedField` parameter.\n   * - The value is the count of items aggregated in the group.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be\n   * > used on [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * @public\n   * @documentationMaturity preview\n   * @param projectedField - Field in the aggregation results that contains the count value. Default: `count`.\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  count(projectedField?: string): WixDataAggregate\n\n  /**\n   * Filters out items from being used in an aggregation.\n   *\n   * The `filter()` method refines a `WixDataAggregate` so that it only\n   * includes items from the aggregate's collection which match the specified\n   * filter criteria.\n   *\n   * To create a filter, use the wix-data `filter()` method.\n   *\n   * Filtering using `filter()` takes place before grouping is performed on the\n   * aggregation. To filter grouped results, use the `having()` method.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be\n   * > used on [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * @public\n   * @documentationMaturity preview\n   * @param filter - Filter to use to filter out items from being used in the aggregation.\n   * @requiredField filter\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  filter(filter: WixDataFilter): WixDataAggregate\n\n  /**\n   * Groups items together in an aggregation.\n   *\n   * The `group()` method refines a `WixDataAggregate` so that its items are\n   * grouped by the specified field or fields.\n   *\n   * You can perform aggregations on the groups using the following methods:\n   * - `avg()`\n   * - `count()`\n   * - `max()`\n   * - `min()`\n   * - `sum()`\n   *\n   * To filter grouped results, use the `having()` method.\n   *\n   * > **Notes:**\n   * > - Aggregations can only be used on collections you have created. They cannot be used on [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * > - You can only call the `group()` method once per aggregate query.\n   * @public\n   * @documentationMaturity preview\n   * @param field - Field or fields to group on.\n   * @requiredField field\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  group(...field: string[]): WixDataAggregate\n\n  /**\n   * Filters out groups from being returned from an aggregation.\n   *\n   * The `having()` method refines a `WixDataAggregate` so that it only\n   * includes groups from the aggregate's grouping which match the specified\n   * filter criteria.\n   *\n   * To create a filter, use the wix-data `filter()` method.\n   *\n   * Filtering using `having()` takes place after grouping is performed on the\n   * aggregation. To filter items before grouping, use the `filter()` method.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be used in [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * @public\n   * @documentationMaturity preview\n   * @param filter - Filter to use to filter out groups from being returned from the aggregation.\n   * @requiredField filter\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  having(filter: WixDataFilter): WixDataAggregate\n\n  /**\n   * Limits the number of items or groups the aggregation returns.\n   *\n   * The `limit()` method defines the number of results an aggregation returns in each\n   * page. Only one page of results is retrieved at a time. The `next()`\n   * method is used to navigate the pages of a query result.\n   *\n   * By default, `limit` is set to `50`.\n   *\n   * The maximum value that `limit()` can accept is `1000`.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be used on [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * @public\n   * @documentationMaturity preview\n   * @param limit - Number of items or groups to return.\n   * @requiredField limit\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  limit(limit: number): WixDataAggregate\n\n  /**\n   * Sets the number of items or groups to skip before returning aggregation results.\n   *\n   * The `skip()` method defines the number of results to skip in the aggregation\n   * results before returning new aggregation results.\n   *\n   * For example, if you perform an aggregation on a collection and 10 groups match\n   * your aggregation, but you set `skip` to 3, the results returned will skip\n   * the first 3 groups that match and return the 4th through 10th items.\n   *\n   * By default, `skip` is set to 0.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be\n   * > used on [Wix app collections](https://support.wix.com/en/article/cms-formerly-content-manager-working-with-wix-app-collections).\n   * @public\n   * @documentationMaturity preview\n   * @param skip - Number of items or groups to skip in the aggregation results before returning the results.\n   * @requiredField skip\n   * @returns `WixDataAggregate` object representing the refined aggregation.\n   */\n  skip(skip: number): WixDataAggregate\n\n  /**\n   * Adds a sort to a query or sort, sorting by the specified fields in descending order.\n   *\n   * The `descending()` method refines this query to sort in descending order of the specified fields. If you\n   * specify more than one field, descending() sorts the results in descending order by each field in the order\n   * they are listed.\n   *\n   * You can sort the following types:\n   *\n   * Number: Sorts numerically.\n   * - Date: Sorts by date and time.\n   * - String: Sorts lexicographically, so `\"abc\"` comes before `\"XYZ\"`.\n   * - Reference: Compares by the ID of the referenced item as a String.\n   *\n   * If a field contains a number as a String, that value is sorted alphabetically and not numerically. Items\n   * that do not have a value for the specified sort field are ranked lowest.\n   *\n   * > **Note**: Aggregations can only be used on collections you have created. They cannot be used on [Wix app collections](https://support.wix.com/en/article/cms-formerly-content-manager-working-with-wix-app-collections).\n   * @public\n   * @documentationMaturity preview\n   * @param fields - Fields used in the sort.\n   * @requiredField fields\n   * @returns Refined query.\n   */\n  descending(...fields: string[]): WixDataAggregate\n\n  descending(fields: string[]): WixDataAggregate\n\n  descending(...fields: any): WixDataAggregate\n\n  /**\n   * Adds a sort to a query or sort, sorting by the specified fields in ascending order.\n   *\n   * The `ascending()` method refines this query in ascending order of the specified fields. If you specify more\n   * than one field, `ascending()` sorts the results in ascending order by each field in the order they are listed.\n   *\n   * You can sort the following types:\n   * - Number: Sorts numerically.\n   * - Date: Sorts by date and time.\n   * - String: Sorts lexicographically, so `\"abc\"` comes after `\"XYZ\"`.\n   * - Reference: Compares by the ID of the referenced item as a String.\n   *\n   * If a field contains a number as a String, that value is sorted alphabetically and not numerically.\n   * Items that do not have a value for the specified sort field are ranked lowest.\n   *\n   * > **Note**: Aggregations can only be used on collections you have created. They cannot be used on [Wix app collections](https://support.wix.com/en/article/cms-formerly-content-manager-working-with-wix-app-collections).\n   * @public\n   * @documentationMaturity preview\n   * @param fields - Fields used in the sort.\n   * @requiredField fields\n   * @returns Refined query.\n   */\n  ascending(...fields: string[]): WixDataAggregate\n\n  ascending(fields: string[]): WixDataAggregate\n\n  ascending(...fields: any): WixDataAggregate\n\n  /**\n   * Runs the aggregation and returns the results.\n   *\n   * The `run()` method returns a Promise that resolves to the results found\n   * by the aggregation and some information about the results.\n   *\n   * > **Note:** Aggregations can only be used on collections you have created. They cannot be\n   * > used on [Wix app collections](https://dev.wix.com/docs/develop-websites/articles/databases/wix-data/collections/working-with-wix-app-collections-and-code).\n   * @public\n   * @documentationMaturity preview\n   * @param options - Options to use when running an aggregation.\n   * @returns Promise that resolves to the results of the aggregation.\n   */\n  run(\n    options?: WixDataAggregateOptions\n  ): Promise<WixDataResult<Record<string, any>>>\n}\n"],"mappings":"","ignoreList":[]}