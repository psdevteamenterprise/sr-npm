{"version":3,"names":["encode","value","serializeDates","decode","parseDates","json","isDate","obj","copyRoot","k","stringifyDate","Object","prototype","toString","call","isNaN","getTime","isDateString","Date","getDate","$date","d","toJSON","Array","isArray"],"sources":["../../../src/utils/codec.ts"],"sourcesContent":["export function encode(value: any): any {\n  return serializeDates(value)\n}\n\nexport function decode(value: any): any {\n  return parseDates(value)\n}\n\nfunction serializeDates(json: any) {\n  if (typeof json !== 'object' || isDate(json)) {\n    return json\n  }\n\n  const obj = copyRoot(json)\n  for (const k in obj) {\n    const value = obj[k]\n    if (value && isDate(value)) {\n      obj[k] = stringifyDate(value)\n    } else if (typeof obj[k] === 'object' && obj[k] !== null) {\n      obj[k] = serializeDates(obj[k])\n    }\n  }\n  return obj\n}\n\nfunction isDate(obj: object): obj is Date {\n  if (Object.prototype.toString.call(obj) !== '[object Date]') {\n    return false\n  }\n  return !isNaN((obj as Date).getTime())\n}\n\nfunction isDateString(value: any) {\n  return isNaN(value) && !isNaN(new Date(value).getDate())\n}\n\nfunction parseDates(json: any) {\n  if (typeof json !== 'object' || isDate(json)) {\n    return json\n  }\n\n  const obj = copyRoot(json)\n  for (const k in obj) {\n    if (obj[k] && obj[k].$date && isDateString(obj[k].$date)) {\n      obj[k] = new Date(obj[k].$date)\n    } else if (typeof obj[k] === 'object' && obj[k] !== null) {\n      obj[k] = parseDates(obj[k])\n    }\n  }\n  return obj\n}\n\nfunction stringifyDate(d: Date) {\n  return {\n    $date: d.toJSON(),\n  }\n}\n\nfunction copyRoot(obj: any) {\n  if (Array.isArray(obj)) {\n    return [...obj]\n  } else {\n    return { ...obj }\n  }\n}\n"],"mappings":";;;;;AAAO,SAASA,MAAMA,CAACC,KAAU,EAAO;EACtC,OAAOC,cAAc,CAACD,KAAK,CAAC;AAC9B;AAEO,SAASE,MAAMA,CAACF,KAAU,EAAO;EACtC,OAAOG,UAAU,CAACH,KAAK,CAAC;AAC1B;AAEA,SAASC,cAAcA,CAACG,IAAS,EAAE;EACjC,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIC,MAAM,CAACD,IAAI,CAAC,EAAE;IAC5C,OAAOA,IAAI;EACb;EAEA,MAAME,GAAG,GAAGC,QAAQ,CAACH,IAAI,CAAC;EAC1B,KAAK,MAAMI,CAAC,IAAIF,GAAG,EAAE;IACnB,MAAMN,KAAK,GAAGM,GAAG,CAACE,CAAC,CAAC;IACpB,IAAIR,KAAK,IAAIK,MAAM,CAACL,KAAK,CAAC,EAAE;MAC1BM,GAAG,CAACE,CAAC,CAAC,GAAGC,aAAa,CAACT,KAAK,CAAC;IAC/B,CAAC,MAAM,IAAI,OAAOM,GAAG,CAACE,CAAC,CAAC,KAAK,QAAQ,IAAIF,GAAG,CAACE,CAAC,CAAC,KAAK,IAAI,EAAE;MACxDF,GAAG,CAACE,CAAC,CAAC,GAAGP,cAAc,CAACK,GAAG,CAACE,CAAC,CAAC,CAAC;IACjC;EACF;EACA,OAAOF,GAAG;AACZ;AAEA,SAASD,MAAMA,CAACC,GAAW,EAAe;EACxC,IAAII,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACP,GAAG,CAAC,KAAK,eAAe,EAAE;IAC3D,OAAO,KAAK;EACd;EACA,OAAO,CAACQ,KAAK,CAAER,GAAG,CAAUS,OAAO,CAAC,CAAC,CAAC;AACxC;AAEA,SAASC,YAAYA,CAAChB,KAAU,EAAE;EAChC,OAAOc,KAAK,CAACd,KAAK,CAAC,IAAI,CAACc,KAAK,CAAC,IAAIG,IAAI,CAACjB,KAAK,CAAC,CAACkB,OAAO,CAAC,CAAC,CAAC;AAC1D;AAEA,SAASf,UAAUA,CAACC,IAAS,EAAE;EAC7B,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIC,MAAM,CAACD,IAAI,CAAC,EAAE;IAC5C,OAAOA,IAAI;EACb;EAEA,MAAME,GAAG,GAAGC,QAAQ,CAACH,IAAI,CAAC;EAC1B,KAAK,MAAMI,CAAC,IAAIF,GAAG,EAAE;IACnB,IAAIA,GAAG,CAACE,CAAC,CAAC,IAAIF,GAAG,CAACE,CAAC,CAAC,CAACW,KAAK,IAAIH,YAAY,CAACV,GAAG,CAACE,CAAC,CAAC,CAACW,KAAK,CAAC,EAAE;MACxDb,GAAG,CAACE,CAAC,CAAC,GAAG,IAAIS,IAAI,CAACX,GAAG,CAACE,CAAC,CAAC,CAACW,KAAK,CAAC;IACjC,CAAC,MAAM,IAAI,OAAOb,GAAG,CAACE,CAAC,CAAC,KAAK,QAAQ,IAAIF,GAAG,CAACE,CAAC,CAAC,KAAK,IAAI,EAAE;MACxDF,GAAG,CAACE,CAAC,CAAC,GAAGL,UAAU,CAACG,GAAG,CAACE,CAAC,CAAC,CAAC;IAC7B;EACF;EACA,OAAOF,GAAG;AACZ;AAEA,SAASG,aAAaA,CAACW,CAAO,EAAE;EAC9B,OAAO;IACLD,KAAK,EAAEC,CAAC,CAACC,MAAM,CAAC;EAClB,CAAC;AACH;AAEA,SAASd,QAAQA,CAACD,GAAQ,EAAE;EAC1B,IAAIgB,KAAK,CAACC,OAAO,CAACjB,GAAG,CAAC,EAAE;IACtB,OAAO,CAAC,GAAGA,GAAG,CAAC;EACjB,CAAC,MAAM;IACL,OAAO;MAAE,GAAGA;IAAI,CAAC;EACnB;AACF","ignoreList":[]}