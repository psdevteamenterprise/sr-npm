import { RejectingValidator } from './base-validator';
declare class ApiValidator extends RejectingValidator {
    arity(method: string, args: IArguments, from: number, to: number): this;
    _isObject(item: any, collectionName: string): this;
    item(item: any, collectionName: string, requireId: boolean): this;
    items(items: any, collectionName: string): this;
    fieldName(fieldName: any): this;
    itemId(itemId: any): this;
    itemIds(itemIds: any, collectionName: string): this;
    _options(options: any, flags: string[]): this;
    referenceRemoveParameters(parameters: any): this;
    referenceParameters(parameters: any): this;
    referenceParameter(parameter: any): this;
    isNonEmptyString(operand: any, operandName: string): this;
    references(refs: any): this;
    options(options: any): this;
    bulkInsertOptions(options: any): this;
    bulkUpdateOptions(options: any): this;
    bulkRemoveOptions(options: any): this;
    truncateOptions(options: any): this;
    collectionName(collectionName: any): this;
}
export declare function apiValidator(errorBuilder?: (s: string) => Error): ApiValidator;
export {};
//# sourceMappingURL=validations.d.ts.map