"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  createSecret: () => createSecret2,
  deleteSecret: () => deleteSecret2,
  getSecretValue: () => getSecretValue2,
  listSecretInfo: () => listSecretInfo2,
  updateSecret: () => updateSecret
});
module.exports = __toCommonJS(meta_exports);

// src/velo-secrets-vault-v1-secret-secrets.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl(opts) {
  const domainToMappings = {
    "service.wix-code.com": [
      {
        srcPath: "/_api/cloud-secrets-vault-server",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/cloud-secrets-vault-server",
        destPath: ""
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/cloud-secrets-vault-server",
        destPath: ""
      }
    ],
    "service-int.wix-code.com": [
      {
        srcPath: "/_api/cloud-secrets-vault-server",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/_api/cloud-secrets-vault-server",
        destPath: ""
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_secrets_secrets";
function getSecretValue(payload) {
  function __getSecretValue({ host }) {
    const metadata = {
      entityFqdn: "wix.velo.secrets_vault.v1.secret",
      method: "GET",
      methodFqn: "wix.velo.secrets_vault.v1.SecretsVaultService.GetSecretValue",
      packageName: PACKAGE_NAME,
      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({
        protoPath: "/api/v1/secrets/name/{name}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __getSecretValue;
}
function listSecretInfo(payload) {
  function __listSecretInfo({ host }) {
    const metadata = {
      entityFqdn: "wix.velo.secrets_vault.v1.secret",
      method: "GET",
      methodFqn: "wix.velo.secrets_vault.v1.SecretsVaultService.ListSecretInfo",
      packageName: PACKAGE_NAME,
      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({
        protoPath: "/api/v1/secrets",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "secrets.createdDate" },
            { path: "secrets.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __listSecretInfo;
}
function createSecret(payload) {
  function __createSecret({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "secret.createdDate" }, { path: "secret.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.velo.secrets_vault.v1.secret",
      method: "POST",
      methodFqn: "wix.velo.secrets_vault.v1.SecretsVaultService.CreateSecret",
      packageName: PACKAGE_NAME,
      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({
        protoPath: "/api/v1/secrets",
        data: serializedData,
        host
      }),
      data: serializedData
    };
    return metadata;
  }
  return __createSecret;
}
function deleteSecret(payload) {
  function __deleteSecret({ host }) {
    const metadata = {
      entityFqdn: "wix.velo.secrets_vault.v1.secret",
      method: "DELETE",
      methodFqn: "wix.velo.secrets_vault.v1.SecretsVaultService.DeleteSecret",
      packageName: PACKAGE_NAME,
      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({
        protoPath: "/api/v1/secrets/{id}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteSecret;
}
function partiallyUpdateSecret(payload) {
  function __partiallyUpdateSecret({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "secret.createdDate" }, { path: "secret.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.velo.secrets_vault.v1.secret",
      method: "PATCH",
      methodFqn: "wix.velo.secrets_vault.v1.SecretsVaultService.PartiallyUpdateSecret",
      packageName: PACKAGE_NAME,
      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({
        protoPath: "/api/v1/secrets/{id}",
        data: serializedData,
        host
      }),
      data: serializedData
    };
    return metadata;
  }
  return __partiallyUpdateSecret;
}

// src/velo-secrets-vault-v1-secret-secrets.meta.ts
function getSecretValue2() {
  const payload = { name: ":name" };
  const getRequestOptions = getSecretValue(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/api/v1/secrets/name/{name}",
    pathParams: { name: "name" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function listSecretInfo2() {
  const payload = {};
  const getRequestOptions = listSecretInfo(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/api/v1/secrets",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function createSecret2() {
  const payload = {};
  const getRequestOptions = createSecret(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/api/v1/secrets",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteSecret2() {
  const payload = { id: ":id" };
  const getRequestOptions = deleteSecret(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/api/v1/secrets/{id}",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateSecret() {
  const payload = { id: ":id" };
  const getRequestOptions = partiallyUpdateSecret(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/api/v1/secrets/{id}",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createSecret,
  deleteSecret,
  getSecretValue,
  listSecretInfo,
  updateSecret
});
//# sourceMappingURL=meta.js.map