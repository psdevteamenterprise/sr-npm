{"version":3,"sources":["../../index.ts","../../src/velo-secrets-vault-v1-secret-secrets.public.ts","../../src/velo-secrets-vault-v1-secret-secrets.universal.ts","../../src/velo-secrets-vault-v1-secret-secrets.http.ts","../../src/velo-secrets-vault-v1-secret-secrets.context.ts"],"sourcesContent":["export * from './src/velo-secrets-vault-v1-secret-secrets.context.js';\n","import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { EventDefinition, HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  GetSecretValueResponse,\n  ListSecretInfoResponse,\n  Secret,\n  SecretCreatedEnvelope,\n  SecretDeletedEnvelope,\n  SecretUpdatedEnvelope,\n  createSecret as universalCreateSecret,\n  deleteSecret as universalDeleteSecret,\n  getSecretValue as universalGetSecretValue,\n  listSecretInfo as universalListSecretInfo,\n  updateSecret as universalUpdateSecret,\n} from './velo-secrets-vault-v1-secret-secrets.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/secrets' };\n\nexport function getSecretValue(\n  httpClient: HttpClient\n): GetSecretValueSignature {\n  return (name: string) =>\n    universalGetSecretValue(\n      name,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetSecretValueSignature {\n  /**\n   * Retrieves a secret value by name.\n   *\n   * <blockquote class=\"caution\">\n   * __Caution:__\n   * Only use a secret's value in the backend code. Returning the secret value in the frontend is a security risk.\n   * </blockquote>\n   * @param - The name of the secret to get the value of.\n   */\n  (name: string): Promise<GetSecretValueResponse>;\n}\n\nexport function listSecretInfo(\n  httpClient: HttpClient\n): ListSecretInfoSignature {\n  return () =>\n    universalListSecretInfo(\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface ListSecretInfoSignature {\n  /**\n   * Retrieves a list of secrets.\n   *\n   * > **Note:** This method doesn't return the secret's value for security reasons. To retrieve the value, call [Get Secret Value](https://dev.wix.com/docs/rest/business-management/secrets/get-secret-value).\n   */\n  (): Promise<ListSecretInfoResponse>;\n}\n\nexport function createSecret(httpClient: HttpClient): CreateSecretSignature {\n  return (secret: NonNullablePaths<Secret, `name` | `value`>) =>\n    universalCreateSecret(\n      secret,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface CreateSecretSignature {\n  /**\n   * Creates a secret.\n   * @param - Fields of a new secret.\n   * @returns Unique secret ID.\n   */\n  (secret: Secret): Promise<string>;\n}\n\nexport function deleteSecret(httpClient: HttpClient): DeleteSecretSignature {\n  return (_id: string) =>\n    universalDeleteSecret(\n      _id,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface DeleteSecretSignature {\n  /**\n   * Deletes a secret.\n   *\n   * <blockquote class=\"warning\">\n   * <strong>Warning:</strong>\n   * Deleting a secret is irreversible and will break all code using the secret.\n   * </blockquote>\n   * @param - The unique ID of the secret to be deleted.\n   */\n  (_id: string): Promise<void>;\n}\n\nexport function updateSecret(httpClient: HttpClient): UpdateSecretSignature {\n  return (_id: string, secret: Secret) =>\n    universalUpdateSecret(\n      _id,\n      secret,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateSecretSignature {\n  /**\n   * Updates 1 or all fields of a secret.\n   *\n   * To get the secret ID, call [List Secret Info](https://dev.wix.com/docs/rest/business-management/secrets/list-secret-info).\n   * @param - ID of the secret to update.\n   * @param - Details of a secret.\n   */\n  (_id: string, secret: Secret): Promise<void>;\n}\n\nexport const onSecretCreated = EventDefinition(\n  'wix.velo.secrets_vault.v1.secret_created',\n  true,\n  (event: SecretCreatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<SecretCreatedEnvelope>();\nexport const onSecretDeleted = EventDefinition(\n  'wix.velo.secrets_vault.v1.secret_deleted',\n  true,\n  (event: SecretDeletedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'undefined.createdDate' },\n            { path: 'undefined.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<SecretDeletedEnvelope>();\nexport const onSecretUpdated = EventDefinition(\n  'wix.velo.secrets_vault.v1.secret_updated',\n  true,\n  (event: SecretUpdatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n      ])\n    )\n)<SecretUpdatedEnvelope>();\n\nexport {\n  ActionEvent,\n  BaseEventMetadata,\n  CreateSecretRequest,\n  CreateSecretResponse,\n  DeleteSecretRequest,\n  DeleteSecretResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventMetadata,\n  GetSecretValueRequest,\n  GetSecretValueResponse,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  ListSecretInfoRequest,\n  ListSecretInfoResponse,\n  MessageEnvelope,\n  RestoreInfo,\n  Secret,\n  SecretCreatedEnvelope,\n  SecretDeletedEnvelope,\n  SecretUpdatedEnvelope,\n  UpdateSecretRequest,\n  UpdateSecretResponse,\n  WebhookIdentityType,\n} from './velo-secrets-vault-v1-secret-secrets.universal.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixVeloSecretsVaultV1Secret from './velo-secrets-vault-v1-secret-secrets.http.js';\n\nexport interface Secret {\n  /**\n   * Unique secret ID.\n   * @readonly\n   * @format GUID\n   */\n  _id?: string | null;\n  /**\n   * A unique, human-friendly name for the secret. Use it to retrieve the secret value with Get Secret Value.\n   *\n   * **Note:** You can use alphanumeric characters and the following special characters: `_+=-@#$`. Spaces are not supported.\n   * @maxLength 50\n   */\n  name?: string | null;\n  /**\n   * Optional text describing the secret's purpose or any other notes about it.\n   * @maxLength 200\n   */\n  description?: string | null;\n  /**\n   * The encrypted confidential value.\n   * @minLength 1\n   * @maxLength 3500\n   */\n  value?: string | null;\n  /**\n   * Date and time when the secret was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time when the secret was updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n}\n\nexport interface GetSecretValueRequest {\n  /** Secret name. */\n  name: string;\n}\n\nexport interface GetSecretValueResponse {\n  /** The confidential value to protect, such as an API key. */\n  value?: string;\n}\n\nexport interface ListSecretInfoRequest {}\n\nexport interface ListSecretInfoResponse {\n  /** A list of secrets with encrypted values. */\n  secrets?: Secret[];\n}\n\nexport interface CreateSecretRequest {\n  /** Details of a secret. */\n  secret: Secret;\n}\n\nexport interface CreateSecretResponse {\n  /** Unique secret ID. */\n  _id?: string;\n}\n\nexport interface DeleteSecretRequest {\n  /**\n   * ID of the secret to delete.\n   * @format GUID\n   */\n  _id: string;\n}\n\nexport interface DeleteSecretResponse {}\n\nexport interface UpdateSecretRequest {\n  /**\n   * ID of the secret to update.\n   * @format GUID\n   */\n  _id: string;\n  /** Details of a secret. */\n  secret: Secret;\n}\n\nexport interface UpdateSecretResponse {}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface SecretCreatedEnvelope {\n  entity: Secret;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a secret is created.\n * @webhook\n * @eventType wix.velo.secrets_vault.v1.secret_created\n * @serviceIdentifier wix.velo.secrets_vault.v1.SecretsVaultService\n * @slug created\n */\nexport declare function onSecretCreated(\n  handler: (event: SecretCreatedEnvelope) => void | Promise<void>\n): void;\n\nexport interface SecretDeletedEnvelope {\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a secret is deleted.\n * @webhook\n * @eventType wix.velo.secrets_vault.v1.secret_deleted\n * @serviceIdentifier wix.velo.secrets_vault.v1.SecretsVaultService\n * @slug deleted\n */\nexport declare function onSecretDeleted(\n  handler: (event: SecretDeletedEnvelope) => void | Promise<void>\n): void;\n\nexport interface SecretUpdatedEnvelope {\n  entity: Secret;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a secret is updated.\n * @webhook\n * @eventType wix.velo.secrets_vault.v1.secret_updated\n * @serviceIdentifier wix.velo.secrets_vault.v1.SecretsVaultService\n * @slug updated\n */\nexport declare function onSecretUpdated(\n  handler: (event: SecretUpdatedEnvelope) => void | Promise<void>\n): void;\n\n/**\n * Retrieves a secret value by name.\n *\n * <blockquote class=\"caution\">\n * __Caution:__\n * Only use a secret's value in the backend code. Returning the secret value in the frontend is a security risk.\n * </blockquote>\n * @public\n * @requiredField name\n * @param name - The name of the secret to get the value of.\n * @permissionId SECRETS_VAULT.SECRET_READ\n * @applicableIdentity APP\n * @fqn wix.velo.secrets_vault.v1.SecretsVaultService.GetSecretValue\n */\nexport async function getSecretValue(\n  name: string\n): Promise<NonNullablePaths<GetSecretValueResponse, `value`>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ name: name });\n\n  const reqOpts = ambassadorWixVeloSecretsVaultV1Secret.getSecretValue(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { name: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['name']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves a list of secrets.\n *\n * > **Note:** This method doesn't return the secret's value for security reasons. To retrieve the value, call [Get Secret Value](https://dev.wix.com/docs/rest/business-management/secrets/get-secret-value).\n * @public\n * @permissionId SECRETS_VAULT.SECRET_METADATA_READ\n * @applicableIdentity APP\n * @fqn wix.velo.secrets_vault.v1.SecretsVaultService.ListSecretInfo\n */\nexport async function listSecretInfo(): Promise<\n  NonNullablePaths<ListSecretInfoResponse, `secrets`>\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[0] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({});\n\n  const reqOpts = ambassadorWixVeloSecretsVaultV1Secret.listSecretInfo(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {},\n        singleArgumentUnchanged: false,\n      },\n      []\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Creates a secret.\n * @public\n * @requiredField secret\n * @requiredField secret.name\n * @requiredField secret.value\n * @param secret - Fields of a new secret.\n * @permissionId SECRETS_VAULT.SECRET_CREATE\n * @applicableIdentity APP\n * @returns Unique secret ID.\n * @fqn wix.velo.secrets_vault.v1.SecretsVaultService.CreateSecret\n */\nexport async function createSecret(\n  secret: NonNullablePaths<Secret, `name` | `value`>\n): Promise<string> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ secret: secret });\n\n  const reqOpts = ambassadorWixVeloSecretsVaultV1Secret.createSecret(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)?._id!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { secret: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['secret']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Deletes a secret.\n *\n * <blockquote class=\"warning\">\n * <strong>Warning:</strong>\n * Deleting a secret is irreversible and will break all code using the secret.\n * </blockquote>\n * @public\n * @requiredField _id\n * @param _id - The unique ID of the secret to be deleted.\n * @permissionId SECRETS_VAULT.SECRET_DELETE\n * @applicableIdentity APP\n * @fqn wix.velo.secrets_vault.v1.SecretsVaultService.DeleteSecret\n */\nexport async function deleteSecret(_id: string): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ id: _id });\n\n  const reqOpts = ambassadorWixVeloSecretsVaultV1Secret.deleteSecret(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { id: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['_id']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Updates 1 or all fields of a secret.\n *\n * To get the secret ID, call [List Secret Info](https://dev.wix.com/docs/rest/business-management/secrets/list-secret-info).\n * @param _id - ID of the secret to update.\n * @param secret - Details of a secret.\n * @public\n * @requiredField _id\n * @requiredField secret\n * @permissionId SECRETS_VAULT.SECRET_UPDATE\n * @applicableIdentity APP\n * @fqn wix.velo.secrets_vault.v1.SecretsVaultService.PartiallyUpdateSecret\n */\nexport async function updateSecret(_id: string, secret: Secret): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    id: _id,\n    secret: secret,\n  });\n\n  const reqOpts =\n    ambassadorWixVeloSecretsVaultV1Secret.partiallyUpdateSecret(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { id: '$[0]', secret: '$[1]' },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'secret']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'service.wix-code.com': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n    'service-int.wix-code.com': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_secrets_secrets';\n\n/**\n * Retrieves a secret value by name.\n *\n * <blockquote class=\"caution\">\n * __Caution:__\n * Only use a secret's value in the backend code. Returning the secret value in the frontend is a security risk.\n * </blockquote>\n */\nexport function getSecretValue(payload: object): RequestOptionsFactory<any> {\n  function __getSecretValue({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'GET' as any,\n      methodFqn: 'wix.velo.secrets_vault.v1.SecretsVaultService.GetSecretValue',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets/name/{name}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __getSecretValue;\n}\n\n/**\n * Retrieves a list of secrets.\n *\n * > **Note:** This method doesn't return the secret's value for security reasons. To retrieve the value, call [Get Secret Value](https://dev.wix.com/docs/rest/business-management/secrets/get-secret-value).\n */\nexport function listSecretInfo(payload: object): RequestOptionsFactory<any> {\n  function __listSecretInfo({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'GET' as any,\n      methodFqn: 'wix.velo.secrets_vault.v1.SecretsVaultService.ListSecretInfo',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'secrets.createdDate' },\n              { path: 'secrets.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __listSecretInfo;\n}\n\n/** Creates a secret. */\nexport function createSecret(payload: object): RequestOptionsFactory<any> {\n  function __createSecret({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'secret.createdDate' }, { path: 'secret.updatedDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'POST' as any,\n      methodFqn: 'wix.velo.secrets_vault.v1.SecretsVaultService.CreateSecret',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n    };\n\n    return metadata;\n  }\n\n  return __createSecret;\n}\n\n/**\n * Deletes a secret.\n *\n * <blockquote class=\"warning\">\n * <strong>Warning:</strong>\n * Deleting a secret is irreversible and will break all code using the secret.\n * </blockquote>\n */\nexport function deleteSecret(payload: object): RequestOptionsFactory<any> {\n  function __deleteSecret({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'DELETE' as any,\n      methodFqn: 'wix.velo.secrets_vault.v1.SecretsVaultService.DeleteSecret',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets/{id}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteSecret;\n}\n\n/**\n * Updates 1 or all fields of a secret.\n *\n * To get the secret ID, call [List Secret Info](https://dev.wix.com/docs/rest/business-management/secrets/list-secret-info).\n */\nexport function partiallyUpdateSecret(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __partiallyUpdateSecret({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'secret.createdDate' }, { path: 'secret.updatedDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'PATCH' as any,\n      methodFqn:\n        'wix.velo.secrets_vault.v1.SecretsVaultService.PartiallyUpdateSecret',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets/{id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n    };\n\n    return metadata;\n  }\n\n  return __partiallyUpdateSecret;\n}\n","import {\n  getSecretValue as publicGetSecretValue,\n  listSecretInfo as publicListSecretInfo,\n  createSecret as publicCreateSecret,\n  deleteSecret as publicDeleteSecret,\n  updateSecret as publicUpdateSecret,\n} from './velo-secrets-vault-v1-secret-secrets.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { createEventModule } from '@wix/sdk-runtime/event-definition-modules';\nimport {\n  BuildRESTFunction,\n  MaybeContext,\n  BuildEventDefinition,\n} from '@wix/sdk-types';\nimport { onSecretCreated as publicOnSecretCreated } from './velo-secrets-vault-v1-secret-secrets.public.js';\nimport { onSecretDeleted as publicOnSecretDeleted } from './velo-secrets-vault-v1-secret-secrets.public.js';\nimport { onSecretUpdated as publicOnSecretUpdated } from './velo-secrets-vault-v1-secret-secrets.public.js';\n\nexport const getSecretValue: MaybeContext<\n  BuildRESTFunction<typeof publicGetSecretValue> & typeof publicGetSecretValue\n> = /*#__PURE__*/ createRESTModule(publicGetSecretValue);\nexport const listSecretInfo: MaybeContext<\n  BuildRESTFunction<typeof publicListSecretInfo> & typeof publicListSecretInfo\n> = /*#__PURE__*/ createRESTModule(publicListSecretInfo);\nexport const createSecret: MaybeContext<\n  BuildRESTFunction<typeof publicCreateSecret> & typeof publicCreateSecret\n> = /*#__PURE__*/ createRESTModule(publicCreateSecret);\nexport const deleteSecret: MaybeContext<\n  BuildRESTFunction<typeof publicDeleteSecret> & typeof publicDeleteSecret\n> = /*#__PURE__*/ createRESTModule(publicDeleteSecret);\nexport const updateSecret: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateSecret> & typeof publicUpdateSecret\n> = /*#__PURE__*/ createRESTModule(publicUpdateSecret);\n/**\n * Triggered when a secret is created.\n */\nexport const onSecretCreated: BuildEventDefinition<\n  typeof publicOnSecretCreated\n> = createEventModule(publicOnSecretCreated);\n/**\n * Triggered when a secret is deleted.\n */\nexport const onSecretDeleted: BuildEventDefinition<\n  typeof publicOnSecretDeleted\n> = createEventModule(publicOnSecretDeleted);\n/**\n * Triggered when a secret is updated.\n */\nexport const onSecretUpdated: BuildEventDefinition<\n  typeof publicOnSecretUpdated\n> = createEventModule(publicOnSecretUpdated);\n\nexport { WebhookIdentityType } from './velo-secrets-vault-v1-secret-secrets.universal.js';\nexport {\n  Secret,\n  GetSecretValueRequest,\n  GetSecretValueResponse,\n  ListSecretInfoRequest,\n  ListSecretInfoResponse,\n  CreateSecretRequest,\n  CreateSecretResponse,\n  DeleteSecretRequest,\n  DeleteSecretResponse,\n  UpdateSecretRequest,\n  UpdateSecretResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  BaseEventMetadata,\n  EventMetadata,\n  SecretCreatedEnvelope,\n  SecretDeletedEnvelope,\n  SecretUpdatedEnvelope,\n} from './velo-secrets-vault-v1-secret-secrets.universal.js';\n"],"mappings":"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","names":["createSecret","deleteSecret","getSecretValue","listSecretInfo","onSecretCreated","onSecretDeleted","onSecretUpdated","updateSecret","import_rename_all_nested_keys","import_timestamp","import_transform_paths","import_timestamp","import_rest_modules","payload","WebhookIdentityType","getSecretValue","sdkTransformError","listSecretInfo","createSecret","deleteSecret","getSecretValue","listSecretInfo","createSecret","deleteSecret","updateSecret","import_rest_modules","getSecretValue","listSecretInfo","createSecret","deleteSecret","updateSecret","onSecretCreated","onSecretDeleted","onSecretUpdated"]}