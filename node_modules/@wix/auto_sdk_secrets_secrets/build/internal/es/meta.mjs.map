{"version":3,"sources":["../../../src/velo-secrets-vault-v1-secret-secrets.http.ts","../../../src/velo-secrets-vault-v1-secret-secrets.meta.ts"],"sourcesContent":["import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'service.wix-code.com': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n    'service-int.wix-code.com': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/_api/cloud-secrets-vault-server',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_secrets_secrets';\n\n/**\n * Retrieves a secret value by name.\n *\n * <blockquote class=\"caution\">\n * __Caution:__\n * Only use a secret's value in the backend code. Returning the secret value in the frontend is a security risk.\n * </blockquote>\n */\nexport function getSecretValue(payload: object): RequestOptionsFactory<any> {\n  function __getSecretValue({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'GET' as any,\n      methodFqn: 'wix.velo.secrets_vault.v1.SecretsVaultService.GetSecretValue',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets/name/{name}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __getSecretValue;\n}\n\n/**\n * Retrieves a list of secrets.\n *\n * > **Note:** This method doesn't return the secret's value for security reasons. To retrieve the value, call [Get Secret Value](https://dev.wix.com/docs/rest/business-management/secrets/get-secret-value).\n */\nexport function listSecretInfo(payload: object): RequestOptionsFactory<any> {\n  function __listSecretInfo({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'GET' as any,\n      methodFqn: 'wix.velo.secrets_vault.v1.SecretsVaultService.ListSecretInfo',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'secrets.createdDate' },\n              { path: 'secrets.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __listSecretInfo;\n}\n\n/** Creates a secret. */\nexport function createSecret(payload: object): RequestOptionsFactory<any> {\n  function __createSecret({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'secret.createdDate' }, { path: 'secret.updatedDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'POST' as any,\n      methodFqn: 'wix.velo.secrets_vault.v1.SecretsVaultService.CreateSecret',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n    };\n\n    return metadata;\n  }\n\n  return __createSecret;\n}\n\n/**\n * Deletes a secret.\n *\n * <blockquote class=\"warning\">\n * <strong>Warning:</strong>\n * Deleting a secret is irreversible and will break all code using the secret.\n * </blockquote>\n */\nexport function deleteSecret(payload: object): RequestOptionsFactory<any> {\n  function __deleteSecret({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'DELETE' as any,\n      methodFqn: 'wix.velo.secrets_vault.v1.SecretsVaultService.DeleteSecret',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets/{id}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteSecret;\n}\n\n/**\n * Updates 1 or all fields of a secret.\n *\n * To get the secret ID, call [List Secret Info](https://dev.wix.com/docs/rest/business-management/secrets/list-secret-info).\n */\nexport function partiallyUpdateSecret(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __partiallyUpdateSecret({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'secret.createdDate' }, { path: 'secret.updatedDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.velo.secrets_vault.v1.secret',\n      method: 'PATCH' as any,\n      methodFqn:\n        'wix.velo.secrets_vault.v1.SecretsVaultService.PartiallyUpdateSecret',\n      packageName: PACKAGE_NAME,\n      url: resolveWixVeloSecretsVaultV1SecretsVaultServiceUrl({\n        protoPath: '/api/v1/secrets/{id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n    };\n\n    return metadata;\n  }\n\n  return __partiallyUpdateSecret;\n}\n","import * as ambassadorWixVeloSecretsVaultV1Secret from './velo-secrets-vault-v1-secret-secrets.http.js';\nimport * as ambassadorWixVeloSecretsVaultV1SecretTypes from './velo-secrets-vault-v1-secret-secrets.types.js';\nimport * as ambassadorWixVeloSecretsVaultV1SecretUniversalTypes from './velo-secrets-vault-v1-secret-secrets.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function getSecretValue(): __PublicMethodMetaInfo<\n  'GET',\n  { name: string },\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.GetSecretValueRequest,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.GetSecretValueRequest,\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.GetSecretValueResponse,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.GetSecretValueResponse\n> {\n  const payload = { name: ':name' } as any;\n\n  const getRequestOptions =\n    ambassadorWixVeloSecretsVaultV1Secret.getSecretValue(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/api/v1/secrets/name/{name}',\n    pathParams: { name: 'name' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function listSecretInfo(): __PublicMethodMetaInfo<\n  'GET',\n  {},\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.ListSecretInfoRequest,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.ListSecretInfoRequest,\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.ListSecretInfoResponse,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.ListSecretInfoResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixVeloSecretsVaultV1Secret.listSecretInfo(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/api/v1/secrets',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function createSecret(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.CreateSecretRequest,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.CreateSecretRequest,\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.CreateSecretResponse,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.CreateSecretResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixVeloSecretsVaultV1Secret.createSecret(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/api/v1/secrets',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteSecret(): __PublicMethodMetaInfo<\n  'DELETE',\n  { id: string },\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.DeleteSecretRequest,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.DeleteSecretRequest,\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.DeleteSecretResponse,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.DeleteSecretResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions =\n    ambassadorWixVeloSecretsVaultV1Secret.deleteSecret(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/api/v1/secrets/{id}',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateSecret(): __PublicMethodMetaInfo<\n  'PATCH',\n  { id: string },\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.UpdateSecretRequest,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.UpdateSecretRequest,\n  ambassadorWixVeloSecretsVaultV1SecretUniversalTypes.UpdateSecretResponse,\n  ambassadorWixVeloSecretsVaultV1SecretTypes.UpdateSecretResponse\n> {\n  const payload = { id: ':id' } as any;\n\n  const getRequestOptions =\n    ambassadorWixVeloSecretsVaultV1Secret.partiallyUpdateSecret(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'PATCH',\n    path: '/api/v1/secrets/{id}',\n    pathParams: { id: 'id' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":"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","names":["payload","getSecretValue","listSecretInfo","createSecret","deleteSecret"]}