/* eslint-disable @typescript-eslint/no-empty-object-type */
import * as api from './data-items-api-client';
export function insert() {
    return buildPublicMethodMetaInfo(api.insertDataItemRequestOptions);
}
export function update() {
    return buildPublicMethodMetaInfo(api.updateDataItemRequestOptions);
}
export function save() {
    return buildPublicMethodMetaInfo(api.saveDataItemRequestOptions);
}
export function get() {
    return buildPublicMethodMetaInfo(api.getDataItemRequestOptions, { dataItemId: ':dataItemId' }, { dataItemId: 'dataItemId' });
}
export function remove() {
    return buildPublicMethodMetaInfo(api.removeDataItemRequestOptions);
}
export function truncate() {
    return buildPublicMethodMetaInfo(api.truncateDataItemsRequestOptions);
}
export function bulkInsert() {
    return buildPublicMethodMetaInfo(api.bulkInsertDataItemsRequestOptions);
}
export function patch() {
    return buildPublicMethodMetaInfo(api.patchDataItemRequestOptions);
}
export function bulkPatch() {
    return buildPublicMethodMetaInfo(api.bulkPatchDataItemsRequestOptions);
}
export function bulkUpdate() {
    return buildPublicMethodMetaInfo(api.bulkUpdateDataItemsRequestOptions);
}
export function bulkSave() {
    return buildPublicMethodMetaInfo(api.bulkSaveDataItemsRequestOptions);
}
export function bulkRemove() {
    return buildPublicMethodMetaInfo(api.bulkRemoveDataItemsRequestOptions);
}
export function isReferenced() {
    return buildPublicMethodMetaInfo(api.isReferencedDataItemRequestOptions);
}
export function insertReference() {
    return buildPublicMethodMetaInfo(api.bulkInsertDataItemsRequestOptions);
}
export function removeReference() {
    return buildPublicMethodMetaInfo(api.bulkRemoveDataItemReferencesRequestOptions);
}
export function replaceReferences() {
    return buildPublicMethodMetaInfo(api.replaceDataItemReferencesRequestOptions);
}
export function search() {
    return buildPublicMethodMetaInfo(api.searchDataItemsRequestOptions);
}
function buildPublicMethodMetaInfo(requestOptionsParams, payload = {}, pathParams = {}) {
    return {
        getUrl: (context) => api.reqOptions(requestOptionsParams, payload)(context).url,
        httpMethod: requestOptionsParams.method,
        path: requestOptionsParams.httpPath,
        pathParams,
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
//# sourceMappingURL=data-v2-data-item-items.meta.js.map