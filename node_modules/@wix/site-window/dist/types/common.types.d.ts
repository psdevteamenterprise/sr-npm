/**
 * An object that defines the location.
 */
export interface Coordinates {
    /**
     * The position's latitude in decimal degrees.
     * @requiredField latitude
     */
    latitude: number;
    /**
     * The position's longitude in decimal degrees.
     * @requiredField longitude
     */
    longitude: number;
    /**
     * The position's altitude in meters, relative to sea level. This value may be null if the browser cannot provide the data.
     * @requiredField altitude
     */
    altitude: number;
    /**
     * The accuracy in meters of the `latitude` and `longitude` properties.
     * @requiredField accuracy
     */
    accuracy: number;
    /**
     * The accuracy in meters of the `altitude` property. This value may be null.
     * @requiredField altitudeAccuracy
     */
    altitudeAccuracy: number;
    /**
     * The direction in degrees in which the device is traveling. It indicates how far off from heading true north the device is. If `speed` is `0`, the heading is `NaN`. This value may be null if the browser can't provide the data.
     * @requiredField heading
     */
    heading: number;
    /**
     * The velocity in meters per second of the device. This value may be null if the browser can't provide the data.
     * @requiredField speed
     */
    speed: number;
}
/**
 * An object returned by the `getCurrentGeolocation()` function that contains information about the current geolocation.
 */
export interface CurrentGeolocation {
    /**
     * The geolocation timestamp representing the date and time at which the location was retrieved.
     * @requiredField timestamp
     */
    timestamp: string;
    /**
     * An object that defines the location.
     * @requiredField coords
     * @servicePath wix-window-frontend.Coordinates
     */
    coords: Coordinates;
}
/**
 * A custom parameter used when sending a CustomEvent track event.
 */
export interface CustomType {
}
/**
 * An object containing the size of the actual body of the page, which may be larger or smaller than the current window.
 */
export interface DocumentSize {
    /**
     * The height of the page body.
     * @requiredField height
     */
    height: number;
    /**
     * The width of the page body.
     * @requiredField width
     */
    width: number;
}
/**
 * An object returned by the `registerEventListener()` method that contains information about a tracking event.
 */
export interface EventData {
    /**
     * Event name. The following standard events are supported:
     * + `AddPaymentInfo`
     * + `AddProductImpression`
     * + `AddToCart`
     * + `CheckoutStep`
     * + `ClickProduct`
     * + `CompleteRegistration`
     * + `InitiateCheckout`
     * + `Lead`
     * + `Purchase`
     * + `RemoveFromCart`
     * + `Schedule`
     * + `StartPayment`
     * + `ViewContent`
     */
    eventName?: string;
    /**
     * The event's parameters. **Note:** The `CompleteRegistration` and `Schedule` events don't return any parameters.
     * @requiredField parameters
     * @servicePath wix-window-frontend.trackingParametersCustomEvent
     * @servicePath wix-window-frontend.trackingParametersAddPaymentInfoEvent
     * @servicePath wix-window-frontend.trackingParametersAddProductImpressionEvent
     * @servicePath wix-window-frontend.trackingParametersAddToCartEvent
     * @servicePath wix-window-frontend.trackingParametersCheckoutStepEvent
     * @servicePath wix-window-frontend.trackingParametersClickProductEvent
     * @servicePath wix-window-frontend.trackingParametersInitiateCheckoutEvent
     * @servicePath wix-window-frontend.trackingParametersLeadEvent
     * @servicePath wix-window-frontend.trackingParametersPurchaseEvent
     * @servicePath wix-window-frontend.trackingParametersRemoveFromCartEvent
     * @servicePath wix-window-frontend.trackingParametersStartPaymentEvent
     * @servicePath wix-window-frontend.trackingParametersViewContentEvent
     */
    parameters: trackingParametersCustomEvent | trackingParametersAddPaymentInfoEvent | trackingParametersAddProductImpressionEvent | trackingParametersAddToCartEvent | trackingParametersCheckoutStepEvent | trackingParametersClickProductEvent | trackingParametersInitiateCheckoutEvent | trackingParametersLeadEvent | trackingParametersPurchaseEvent | trackingParametersRemoveFromCartEvent | trackingParametersStartPaymentEvent | trackingParametersViewContentEvent;
}
/**
 * An object used for providing options for the `lightbox.open()` method.
 */
export interface LightboxOpenOptions {
    /**
     * The extension ID of the app's lightbox extension, which you can find in the Extensions page of your app dashboard.
     * @requiredField extensionId
     */
    extensionId: string;
    /**
     * Data to pass to the lightbox.
     */
    data?: object;
}
/**
 * An object used when opening a modal window.
 */
export interface OpenModalOptions {
    /**
     * Width of the modal window.
     * @requiredField width
     */
    width: number;
    /**
     * Height of the modal window.
     * @requiredField height
     */
    height: number;
}
/**
 * An object containing the scroll offset of the page within the window from the top-left corner.
 */
export interface ScrollOffset {
    /**
     * The horizontal scroll offset of the page within the window from the left.
     * @requiredField x
     */
    x: number;
    /**
     * The vertical scroll offset of the page within the window from the top.
     * @requiredField y
     */
    y: number;
}
/**
 * An object used for providing options for the `scrollTo()` method.
 */
export interface ScrollToOptions {
    /**
     * Indicates whether to scroll with an animation. Defaults to `true`.
     * @requiredField scrollAnimation
     */
    scrollAnimation: boolean;
}
/**
 * An object containing the size of the viewable area of the current browser window.
 */
export interface WindowSize {
    /**
     * The height of the window.
     * @requiredField height
     */
    height: number;
    /**
     * The width of the window.
     * @requiredField width
     */
    width: number;
}
/**
 * An object returned by the `getBoundingRect()` method that contains information about a window's size, document's size, and current scroll position.
 */
export interface WindowSizeInfo {
    /**
     * An object containing the size of the viewable area of the current browser window.
     * @requiredField window
     * @servicePath wix-window-frontend.WindowSize
     */
    window: WindowSize;
    /**
     * An object containing the size of the actual body of the page, which may be larger or smaller than the current window.
     * @requiredField document
     * @servicePath wix-window-frontend.DocumentSize
     */
    document: DocumentSize;
    /**
     * An object containing the scroll offset of the page within the window from the top-left corner.
     * @requiredField scroll
     * @servicePath wix-window-frontend.ScrollOffset
     */
    scroll: ScrollOffset;
}
/**
 * Objects used when calling the [`trackEvent()`](window.html#trackEvent) function.
 */
export interface trackingParameters {
    /**
     * Object used for `AddPaymentInfo` events.
     * @servicePath wix-window-frontend.trackingParametersAddPaymentInfoEvent
     */
    AddPaymentInfoEvent?: trackingParametersAddPaymentInfoEvent;
    /**
     * Object used for `AddProductImpression` events.
     * @servicePath wix-window-frontend.trackingParametersAddProductImpressionEvent
     */
    AddProductImpressionEvent?: trackingParametersAddProductImpressionEvent;
    /**
     * Object used for `AddToCart` events.
     * @servicePath wix-window-frontend.trackingParametersAddToCartEvent
     */
    AddToCartEvent?: trackingParametersAddToCartEvent;
    /**
     * Object used for `CheckoutStep` events.
     * @servicePath wix-window-frontend.trackingParametersCheckoutStepEvent
     */
    CheckoutStepEvent?: trackingParametersCheckoutStepEvent;
    /**
     * Object used for `ClickProduct` events.
     * @servicePath wix-window-frontend.trackingParametersClickProductEvent
     */
    ClickProductEvent?: trackingParametersClickProductEvent;
    /**
     * Object used for `InitiateCheckout` events.
     * @servicePath wix-window-frontend.trackingParametersInitiateCheckoutEvent
     */
    InitiateCheckoutEvent?: trackingParametersInitiateCheckoutEvent;
    /**
     * Object used for `Lead` events.
     * @servicePath wix-window-frontend.trackingParametersLeadEvent
     */
    LeadEvent?: trackingParametersLeadEvent;
    /**
     * Object used for `Purchase` events.
     * @servicePath wix-window-frontend.trackingParametersPurchaseEvent
     */
    PurchaseEvent?: trackingParametersPurchaseEvent;
    /**
     * Object used for `RemoveFromCart` events.
     * @servicePath wix-window-frontend.trackingParametersRemoveFromCartEvent
     */
    RemoveFromCartEvent?: trackingParametersRemoveFromCartEvent;
    /**
     * Object used for `StartPayment` events.
     * @servicePath wix-window-frontend.trackingParametersStartPaymentEvent
     */
    StartPaymentEvent?: trackingParametersStartPaymentEvent;
    /**
     * Object used for `ViewContent` events.
     * @servicePath wix-window-frontend.trackingParametersViewContentEvent
     */
    ViewContentEvent?: trackingParametersViewContentEvent;
    /**
     * Object used for custom events.
     * @servicePath wix-window-frontend.trackingParametersCustomEvent
     */
    CustomEvent?: trackingParametersCustomEvent;
}
/**
 * An object used when sending an `AddPaymentInfo` track event.
 *
 * Objects used when calling the [`trackEvent()`](window.html#trackEvent) function.
 */
export interface trackingParametersAddPaymentInfoEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * Payment type. For example, `Visa` or `PayPal`.
     */
    option?: string;
}
/**
 * An object used when sending an AddProductImpression track event.
 */
export interface trackingParametersAddProductImpressionEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * `key:value` pairs describing the products.
     * @requiredField contents
     * @servicePath wix-window-frontend.trackingParametersAddProductImpressionEventContents
     */
    contents: trackingParametersAddProductImpressionEventContents[];
}
/**
 * An object used when sending an AddProductImpression track event.
 */
export interface trackingParametersAddProductImpressionEventContents {
    /**
     * Product ID.
     */
    id?: string;
    /**
     * Stock-keeping unit for the product.
     */
    sku?: string;
    /**
     * Product name.
     * @requiredField name
     */
    name: string;
    /**
     * Product category. For example, `Accessories/Watches`.
     */
    category?: string;
    /**
     * Product price.
     */
    price?: number;
    /**
     * Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.
     */
    currency?: string;
    /**
     * Brand name of the product.
     */
    brand?: string;
    /**
     * Product variant such as `green` or `large`.
     */
    variant?: string;
    /**
     * List or collection the product is part of. For example, `Product Gallery` or `Search Results`.
     */
    list?: string;
    /**
     * Position of the product within a list or collection.
     */
    position?: string;
}
/**
 * An object used when sending an AddToCart track event.
 */
export interface trackingParametersAddToCartEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * Product ID.
     */
    id?: string;
    /**
     * Stock-keeping unit for the product.
     */
    sku?: string;
    /**
     * Product name.
     * @requiredField name
     */
    name: string;
    /**
     * Product price.
     */
    price?: number;
    /**
     * Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.
     */
    currency?: string;
    /**
     * Product category. For example, `Accessories/Watches`.
     */
    category?: string;
    /**
     * Brand name of the product.
     */
    brand?: string;
    /**
     * Product variant such as `green` or `large`.
     */
    variant?: string;
    /**
     * List or collection the product is part of. For example, `Product Gallery` or `Search Results`.
     */
    position?: string;
    /**
     * Product quantity.
     */
    quantity?: number;
}
/**
 * An object used when sending an CheckoutStep track event.
 */
export interface trackingParametersCheckoutStepEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * Number of the step in the checkout process.
     * For example `2` for `addPaymentInfo` in a checkout flow that consists of the steps `StartPayment`, `addPaymentInfo`, and `Select Shipping`.
     */
    step?: string;
    /**
     * Action the visitor has taken in this step. For example, `Select Shipping`.
     */
    action?: string;
    /**
     * Option information on the checkout page. For example the selected payment method.
     */
    option?: string;
}
/**
 * An object used when sending a ClickProduct track event.
 */
export interface trackingParametersClickProductEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * Product ID.
     */
    id?: string;
    /**
     * Stock-keeping unit for the product.
     */
    sku?: string;
    /**
     * Product name.
     * @requiredField name
     */
    name: string;
    /**
     * Product price.
     */
    price?: number;
    /**
     * Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.
     */
    currency?: string;
    /**
     * Product category. For example, `Accessories/Watches`.
     */
    category?: string;
    /**
     * Brand name of the product.
     */
    brand?: string;
    /**
     * Product variant such as `green` or `large`.
     */
    variant?: string;
    /**
     * List or collection the product is part of. For example, `Product Gallery` or `Search Results`.
     */
    list?: string;
    /**
     * Position of the product within a list or collection.
     */
    position?: string;
}
/**
 * An object used when sending a CustomEvent track event.
 */
export interface trackingParametersCustomEvent {
    /**
     * Event category. **Note:** Required for Google Analytics and Facebook Pixel.
     */
    eventCategory?: string;
    /**
     * Event action type. **Note:** Required for Google Analytics and Facebook Pixel.
     */
    eventAction?: string;
    /**
     * Event label.
     */
    eventLabel?: string;
    /**
     * Event value.
     */
    eventValue?: number;
    /**
     * Any number of custom properties.
     * @servicePath wix-window-frontend.CustomType
     */
    "*"?: CustomType;
}
/**
 * An object used when sending an InitiateCheckout track event.
 */
export interface trackingParametersInitiateCheckoutEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * `key:value` pairs describing the products.
     * @requiredField contents
     * @servicePath wix-window-frontend.trackingParametersInitiateCheckoutEventContents
     */
    contents: trackingParametersInitiateCheckoutEventContents[];
}
/**
 * An object used when sending an InitiateCheckout track event.
 */
export interface trackingParametersInitiateCheckoutEventContents {
    /**
     * Product ID.
     */
    id?: string;
    /**
     * Stock-keeping unit for the product.
     */
    sku?: string;
    /**
     * Product name.
     * @requiredField name
     */
    name: string;
    /**
     * Product category. For example, `Accessories/Watches`.
     */
    category?: string;
    /**
     * Product price.
     */
    price?: number;
    /**
     * Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.
     */
    currency?: string;
    /**
     * Brand name of the product.
     */
    brand?: string;
    /**
     * Product variant such as `green` or `large`.
     */
    variant?: string;
    /**
     * Product quantity.
     */
    quantity?: number;
}
/**
 * An object used when sending a Lead track event.
 */
export interface trackingParametersLeadEvent {
    /**
     * Lead category.
     */
    category?: string;
    /**
     * Lead action.
     */
    action?: string;
    /**
     * Lead label.
     */
    label?: string;
}
/**
 * An object used when sending a Purchase track event.
 */
export interface trackingParametersPurchaseEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * Transaction ID or order number.
     */
    id?: string;
    /**
     * Store name.
     */
    affiliation?: string;
    /**
     * Total purchase price. Includes tax and shipping fee.
     */
    revenue?: number;
    /**
     * Total tax.
     */
    tax?: number;
    /**
     * Shipping fee.
     */
    shipping?: number;
    /**
     * Applied coupon code.
     */
    coupon?: string;
    /**
     * `key:value` pairs describing the purchased products.
     * @requiredField contents
     * @servicePath wix-window-frontend.trackingParametersPurchaseEventContents
     */
    contents: trackingParametersPurchaseEventContents[];
}
/**
 * An object used when sending an Purchase track event.
 */
export interface trackingParametersPurchaseEventContents {
    /**
     * Product ID.
     */
    id?: string;
    /**
     * Product name.
     * @requiredField name
     */
    name: string;
    /**
     * Product category. For example, `Accessories/Watches`.
     */
    category?: string;
    /**
     * Product price.
     */
    price?: number;
    /**
     * Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.
     */
    currency?: string;
    /**
     * Brand name of the product.
     */
    brand?: string;
    /**
     * Product variant such as `green` or `large`.
     */
    variant?: string;
    /**
     * Product quantity.
     */
    quantity?: number;
}
/**
 * An object used when sending a RemoveFromCart track event.
 */
export interface trackingParametersRemoveFromCartEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * Product ID.
     */
    id?: string;
    /**
     * Product name.
     * @requiredField name
     */
    name: string;
    /**
     * Product price.
     */
    price?: number;
    /**
     * Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.
     */
    currency?: string;
    /**
     * Product category. For example, `Accessories/Watches`.
     */
    category?: string;
    /**
     * Brand name of the product.
     */
    brand?: string;
    /**
     * Product variant such as `green` or `large`.
     */
    variant?: string;
    /**
     * Position of the product within a list or collection.
     */
    position?: string;
    /**
     * Product quantity.
     */
    quantity?: number;
}
/**
 * An object used when sending an StartPayment track event.
 */
export interface trackingParametersStartPaymentEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * Payment type. For example, `Visa` or `PayPal`.
     */
    option?: string;
}
/**
 * An object used when sending a ViewContent track event.
 */
export interface trackingParametersViewContentEvent {
    /**
     * Event origin. For example, `Music Player` or `Contact Form`.
     */
    origin?: string;
    /**
     * Product ID.
     */
    id?: string;
    /**
     * Stock-keeping unit for the product.
     */
    sku?: string;
    /**
     * Product name.
     * @requiredField name
     */
    name: string;
    /**
     * Product price.
     */
    price?: number;
    /**
     * Currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217). For example, `EUR`, `USD`, or `CAD`.
     */
    currency?: string;
    /**
     * Product category. For example, `Accessories/Watches`.
     */
    category?: string;
    /**
     * Brand name of the product.
     */
    brand?: string;
    /**
     * Product variant such as `green` or `large`.
     */
    variant?: string;
    /**
     * List or collection the product is part of. For example, `Product Gallery` or `Search Results`.
     */
    list?: string;
    /**
     * Position of the product within a list or collection.
     */
    position?: string;
}
